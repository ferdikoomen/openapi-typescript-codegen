{{#each services}}
import { {{{pascalCase name}}}{{{@root.postfix}}} } from './{{{@root.serverDirName}}}/{{{hyphenCase name}}}-{{{hyphenCase @root.postfix}}}';
{{/each}}
import {
  {{{transformReqFuncName}}} as transformRequest,
  {{{transformResFuncName}}} as transformResponse
} from '{{{transformFuncPath}}}';

export class RouteHandler {
  constructor(
    {{#each services}}
    private {{{camelCase name}}}: {{{pascalCase name}}}{{{@root.postfix}}},
    {{/each}}
  ) { }

  private applyTransforms(req, reply, handlerFunc) {
    const transformedRequest = transformRequest(req);
    const handlerResponse = handlerFunc(transformedRequest);
    const transformedResponse = transformResponse(handlerResponse, reply);
    return transformedResponse;
  }

{{#each services}}
{{#each operations}}
  {{{name}}} = (req, reply) => (req, reply, this.{{{camelCase service}}}.{{{name}}});
{{/each}}
{{/each}}
}
