async function sendRequest(options: ApiRequestOptions, url: string): Promise<XMLHttpRequest> {

    const xhr = new XMLHttpRequest();
    xhr.open(options.method, url, true);
    xhr.withCredentials = OpenAPI.WITH_CREDENTIALS;
    xhr.timeout = OpenAPI.TIMEOUT || 0;

    const headers = await getHeaders(options);
    headers.forEach((value: string, key: string) => {
        xhr.setRequestHeader(key, value);
    });

    return new Promise<XMLHttpRequest>((resolve, reject) => {
        xhr.onload = () => {
            resolve(xhr);
        };
        xhr.onerror = () => {
            reject(new ApiError({ url, status: 0, statusText: 'Network Error', body: undefined, ok: false }, 'Network Error'));
        }
        xhr.ontimeout = () => {
          reject(new TimeoutError(url));
        };
        xhr.send(getRequestBody(options));
    });
}
