{
    "openapi": "3.0.1",
    "info": {
        "title": "Event WebApp API",
        "version": "all"
    },
    "paths": {
        "/api/accommodation/{id}": {
            "get": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Gets accommodation by ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Read Event, Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to Accommodations.",
                "operationId": "GetAccommodationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Accommodation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Accommodation."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            },
            "put": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Updates Accommodation",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Accommodation.",
                "operationId": "UpdateAccommodation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Accommodation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Accommodation Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Accommodation."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            },
            "delete": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Deletes Accommodation",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Accommodation.",
                "operationId": "DeleteAccommodation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Accommodation ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Accommodation was deleted successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "409": {
                        "description": "Accommodation is in use."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/accommodation": {
            "get": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Gets all Accommodations with pagination",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Read Event, Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to Accommodations.",
                "operationId": "GetAllAccommodations",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Accommodation list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            },
            "post": {
                "tags": [
                    "Accommodation"
                ],
                "summary": "Creates Accommodation",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Accommodation.",
                "operationId": "CreateAccommodation",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Accommodation Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_AccommodationViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Accommodation."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/bootstrap": {
            "get": {
                "tags": [
                    "Bootstrap"
                ],
                "operationId": "GetBootstrap",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/enumerations": {
            "get": {
                "tags": [
                    "Bootstrap"
                ],
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n",
                "operationId": "GetEnumerations",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/event/{id}": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Event by ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Scopes: hc:internal-systems, hc:event-get<br />\r\nAllowed With Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events or Internal access",
                "operationId": "GetEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date used for Event 'current' state. If null, the current date is used.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems",
                                "hc:event-get"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            },
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Updates Event",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "UpdateEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated Event Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/lite": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets 'Event Lite' data by ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\nAllowed With Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEventLite",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/lite": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets 'Event Lite' data for multiple Events by IDs",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD access for lite information about multiple Events\r\n\r\n**More Information:**<br />\r\nMostly intended for use cross-service RPC/REST SDK.",
                "operationId": "GetLiteInfoForMultipleEvents",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event IDs",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns requested Events.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/schedule": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets 'Event Lite' data for multiple Events by Schedule ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Scopes: hc:internal-systems, hc:event-get<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal systems access.",
                "operationId": "GetEventsByScheduleId",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Schedule IDs",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems",
                                "hc:event-get"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets filtered Events",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.\r\n\r\nSort order can be [\"name\"],[\"asc\" | \"desc\"]",
                "operationId": "GetFilteredEvents",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Events.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Creates Event",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Create Free Event, Create Paid Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "CreateEvent",
                "parameters": [
                    {
                        "name": "sourceEventId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Create Free Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Create Paid Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/for-search": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Event for search by ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEventForSearch",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/ministry-location": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Event by Minsitry Location",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Ministry Location.",
                "operationId": "GetEventsByMinistryLocation",
                "parameters": [
                    {
                        "name": "ministryId",
                        "in": "query",
                        "description": "Minsitry ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "churchEntityId",
                        "in": "query",
                        "description": "Church Entity ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/contact": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets contacts by Event IDs",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nInternal access.",
                "operationId": "GetEventContactsIds",
                "parameters": [
                    {
                        "name": "eventIds",
                        "in": "query",
                        "description": "Comma separated Event IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Contact IDs.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/occurrence": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Occurrence of Event for the specific date-time",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\nAllowed With Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEventOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Local date-time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Occurrence.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event not found."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            },
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Update Event Occurrence",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "UpdateEventOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Occurrence to update",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event Occurrence was updated successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid occurrence data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event or occurrence not found."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/church-entity-occurrence": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Event Occurrences for the specific church entity ID and date-time",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nInternal access only.",
                "operationId": "GetEventOccurrencesForChurchEntity",
                "parameters": [
                    {
                        "name": "churchEnityId",
                        "in": "query",
                        "description": "Church entity ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Local date-time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Occurrence list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event not found."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/for-search": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Events for search",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEventsForSearch",
                "parameters": [
                    {
                        "name": "lastId",
                        "in": "query",
                        "description": "Last event Id. All returnded events will have IDs greater than lastId",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Max record count",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Events.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/occurrences": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets filtered Event Occurrences",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.\r\n\r\n\r\nSort order can be [\"name\" | \"occurrence\" | \"date\"],[\"asc\" | \"desc\"]",
                "operationId": "GetFilteredOccurrences",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Events with occurrences.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventDateViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventDateViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventDateViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/flat-occurrences": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets flat list of filtered Event Occurrences",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Scopes: hc:internal-systems, hc:event-get<br />\r\nAllowed With Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events or Internal systems\r\n\r\n\r\nSort order can be [\"name\" | \"occurrence\"],[\"asc\" | \"desc\"]",
                "operationId": "GetFlatFilteredOccurrences",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns Events with occurrences.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems",
                                "hc:event-get"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/series": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Filtered Event Series list",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events\r\n\r\n**More Info:**<br />\r\nSort order can be [\"date\"],[\"asc\" | \"desc\"]",
                "operationId": "GetFilteredEventSeries",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Events with occurrences.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{eventId}/occurrences": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets Occurrences for Event",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEventOccurrences",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for occurrences",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for occurrences",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns occurrence list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/closed": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Get closed events",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to events",
                "operationId": "GetFilteredClosed",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns found events.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/statistics": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets filtered Event statistics",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetFilteredEventSatistics",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "computeDetails",
                        "in": "query",
                        "description": "true to compute 'by date' details",
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns statistcis.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventStatisticsViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventStatisticsViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventStatisticsViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/cancel": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Cancels Event",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Cancel Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "CloseEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID to cancel",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "unpublishTenant",
                        "in": "query",
                        "description": "true to unpublish from tenant website",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Cancel date or null for current date-time",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event was cancelled successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Cancel Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/cancel/{occurrenceId}": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Cancels Event Occurrence",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Cancel Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "CloseEventOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Occurrence was cancelled successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Cancel Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/cancel-occurrence": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Cancels Event Occurrence by date/time",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Cancel Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "CloseEventOccurrenceByDateTime",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceDateTime",
                        "in": "query",
                        "description": "Occurrence date-time in local time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Occurrence was cancelled successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Cancel Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/accommodation": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Upsert Accommodation for event",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "UpsertAccommodations",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Accommodation IDs",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Accommodations were updated successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/occurrence/venue": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets venues and sub-venues for event occurrence",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetVenuesOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceDateTime",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Venue occurrence data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event or occurrence not found."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            },
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Upserts venues and sub-venues for event occurrence",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "UpsertVenuesOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceDateTime",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Venues and sub-venues data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Venues and sub-venues were updated successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event or occurrence not found."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/published-status": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets publication statuses for events",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal access only",
                "operationId": "GetEventPublishedStatuses",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event IDs",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns publication statuses.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VenuesOccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event or occurrence not found."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/publish": {
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Publish/unpublish Event",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "PublishEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Publish data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_Dto_EventPublishDto"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_Dto_EventPublishDto"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_Dto_EventPublishDto"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_Dto_EventPublishDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operstion completed sucessfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventPublishViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventPublishViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventPublishViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/serving-opportunity/email": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Send an Email to Serving Opportunity Contacts for opportunities attached to the Event",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendEmailAttachedServingOpportunityContacts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "servingOpportunityIds",
                        "in": "query",
                        "description": "Comma separated Serving Opportunity IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Email Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/notification": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Retrieves last notification results for event",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to events.",
                "operationId": "GetLastNotificationResultsForEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "NotificationChannel",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "isCheckIn",
                        "in": "query",
                        "description": "True to return results for event check-in",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns last notification results for ministry location",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NotificationResultViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NotificationResultViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NotificationResultViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized.  Must have the required Permissions.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/event/{id}/web-header": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Retrieves Event web header category image",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nNo restrictions",
                "operationId": "GetWebHeaderUrl",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL to Event web header image",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event or Event web header image not found"
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Upsert Event web header image for existing event",
                "description": "**Data Access:**<br />\r\nUpdate Access to Events",
                "operationId": "UploadEventWebHeaderImage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "file": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "URL and name of Event web header image",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/api/event/web-header": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Upsert Event web header image for event to be created",
                "description": "**Data Access:**<br />\r\nCreate Access to Events",
                "operationId": "UploadEventWebHeaderImage",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "file": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "URL and name of Event web header image",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/event/{id}/companion-app-header": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Retrieves Event Companion App header category image",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nNo restrictions",
                "operationId": "GetCompanionAppHeaderUrl",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL to Event companion app header image",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event or Event companion app header image not found"
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/event/companion-app-header": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Upsert Event companion app header image for event to be created",
                "description": "**Data Access:**<br />\r\nCreate Access to Events",
                "operationId": "UploadEventCompanionAppHeaderImage",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "file": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "URL and name of Event companion app header image",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/event/{id}/thumbnail": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Retrieves Event Thumbnail category image",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nNo restrictions",
                "operationId": "GetThumbnailUrl",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "URL to Event thumbnail image",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event or Event thumbnail image not found"
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/event/thumbnail": {
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Upsert Event thumbnail image for event to be created",
                "description": "**Data Access:**<br />\r\nCreate Access to Events",
                "operationId": "UploadEventThumbnailImage",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "file": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "URL and name of Event thumbnail image",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_WebHeader"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/event/flat-occurrences": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Gets flat list of filtered Event Occurrences",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Scopes: hc:internal-systems, hc:event-get<br />\r\nAllowed With Permission: Read Event<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Events or Internal systems\r\n\r\n\r\nSort order can be [\"name\" | \"occurrence\"],[\"asc\" | \"desc\"]",
                "operationId": "GetFlatFilteredOccurrences",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid parameters.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns Events with occurrences.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceResponseViewModel_V2"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceResponseViewModel_V2"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventOccurrenceResponseViewModel_V2"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems",
                                "hc:event-get"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/attendee/{attendeeId}": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Gets attendee by ID",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to events attendee.",
                "operationId": "GetAttendeeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attendeeId",
                        "in": "path",
                        "description": "Attendee ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "put": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Updates Attendee",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "UpdateAttendee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attendeeId",
                        "in": "path",
                        "description": "Attendee ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Attendee.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/attendee": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Gets filtered attendee occurrences with pagination",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to events attendee.",
                "operationId": "GetFiltered",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OccurrenceId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Attended",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsRegistered",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "idOnly",
                        "in": "query",
                        "description": "True to return person IDs only without filtering and pagination",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "checkInValidation",
                        "in": "query",
                        "description": "True to return check-in status for 'now'",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee or Person ID list.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventAttendeeOccurrencesViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventAttendeeOccurrencesViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventAttendeeOccurrencesViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Adds Attendee to the Event",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "AddAttendee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Attendee.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "delete": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Deletes historic Attendees from Event",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.\r\n\r\nEither occurrenceId or from parameters should be set",
                "operationId": "DeleteHistoricAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendee was deleted successfully"
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/historic-attendee": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Gets filtered historic attendees with pagination",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to events attendee.",
                "operationId": "GetHistoric",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "idOnly",
                        "in": "query",
                        "description": "True to return person IDs only without filtering and pagination",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Attendee Persons or Person IDs.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_EventHistoricPersonsViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_EventHistoricPersonsViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_EventHistoricPersonsViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/historic-attendee/person/{personId}": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Gets historic attendee ids by for a given person id",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />",
                "operationId": "GetEventHistoricAttendeeIdsByPersonId",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns List of found Event Historic Attendee Ids for the given Person ID.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/attendee/attendance": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Gets filtered attendance occurrences with pagination",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to events attendee.",
                "operationId": "GetAttendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Attended",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Attendances.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendanceViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendanceViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendanceViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{eventId}/attendee/statistics": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Get Attendee statistic for specific Occurrence",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Read Event, Manage Event Attendees<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetOccurrenceStatistics",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Occurrence date",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Occurrence start time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully, returns statistics.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_EventOccurrenceStatistics"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_EventOccurrenceStatistics"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_EventOccurrenceStatistics"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Manage Event Attendees"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/person-attendance": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Check person attendance for an Event",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal systems access only",
                "operationId": "CheckAttendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID. If null, check for historic attendance is performed",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personIds",
                        "in": "query",
                        "description": "Comma separated Person IDs to check",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/attendee-occurrence": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Adds Attendee to the Event Occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "AddAttendeeOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Attendee.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "delete": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Deletes Attendee(s) from Event Occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.\r\n\r\nEither occurrenceId or from parameters should be set",
                "operationId": "DeleteAttendeeOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "query",
                        "description": "Person ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Date from which attendee should be removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attendee was deleted successfully"
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/attendee-occurrence/{attendeeOccurrenceId}": {
            "put": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Updates Attendee Occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "UpdateAttendeeOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attendeeOccurrenceId",
                        "in": "path",
                        "description": "Attendee occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Attendee occurrence.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/attendee-occurrence/{attendeeOccurrenceId}/attended/{attended}": {
            "put": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Set Attended/Unattended state for Attendee Occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SetAttendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attendeeOccurrenceId",
                        "in": "path",
                        "description": "Attendee occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "attended",
                        "in": "path",
                        "description": "Attended flag. Null means 'not set'",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Attendee occurrence.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/attendee-occurrence/attended": {
            "put": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Set Attended/Unattended state for Attendees in Occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SetAttendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OccurrenceId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Attended",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsRegistered",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attendance",
                        "in": "query",
                        "description": "Attended flag. Null means 'not set'",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Attendee occurrence."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/attendee-occurrence/person/{personId}/attended": {
            "put": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Set Attended/Unattended state for Attendee",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SetAttendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "Person Unique ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Contains attendance status and a list of occurrences",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_SetAttendanceViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_SetAttendanceViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_SetAttendanceViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_SetAttendanceViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Attendee occurrence."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{eventId}/attendee/cancel": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n",
                "operationId": "CancelEventRegistration",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventRegistrationCancellationRequestViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventRegistrationCancellationRequestViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventRegistrationCancellationRequestViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventRegistrationCancellationRequestViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/event/{id}/attendee-occurrence/ministry": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Add Attendee(s) to host ministry as interested",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "AddAttendeesToMinistryAsInterested",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OccurrenceId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Attended",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsRegistered",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Interested ministry member bulk data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attendee was added tgo ministry successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AddMinistryMemberResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AddMinistryMemberResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AddMinistryMemberResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filter data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event or occurrence not found."
                    }
                }
            }
        },
        "/api/event/{id}/attendee/ministry": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Add Historic Attendee(s) to host ministry as interested",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "AddAttendeesToMinistryAsInterested",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Interested ministry member bulk data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_InterestedMinistryMemberBulkViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Attendee was added tgo ministry successfully",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AddMinistryMemberResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AddMinistryMemberResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AddMinistryMemberResult"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid filter data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event not found."
                    }
                }
            }
        },
        "/api/event/email-variables": {
            "get": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Get email variables",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nNo specific access",
                "operationId": "GetEmailVariables",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/event/{id}/email": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Send an Email to Event attendees",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OccurrenceId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Attended",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsRegistered",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Email Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/attendee/email": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Send an Email to Event historic attendees",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendEmailToHistoricAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Email Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/email": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Send an Email to Event contacts",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendEmail",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Event IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Email Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EmailViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/sms": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Send an SMS to Event attendees",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendSms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OccurrenceId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Attended",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsRegistered",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/attendee/sms": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Send an SMS to Event attendees",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendSmsToHistoricAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/sms": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Send an SMS to Event contacts",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendSms",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Event IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/attachment": {
            "post": {
                "tags": [
                    "EventAttendee"
                ],
                "summary": "Upload a File for Email Attachment",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Update Event, Manage Event Attendees<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nUploads the file to cloud storage (Amazon S3) where it can be viewed/downloaded by unauthenticated callers\r\nwith the URL (intended usage is to embed the URL to the file in an email in lieu of actually \"attaching\" the file).",
                "operationId": "UploadAttachment",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "file": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "File is empty.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Manage Event Attendees"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/check-in/occurrence": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Get current check-in occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "GetCheckInOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/check-in/labels": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Get check-in label data (incl. name, order, etc.)",
                "description": "**Data Access:**<br />\r\nNo special access required",
                "operationId": "GetCheckInLabelsData",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/event/{id}/check-in": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets attendee check-in records",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to events attendee or Room leadership",
                "operationId": "GetAttendeeCheckInRecords",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                        }
                    },
                    {
                        "name": "Gender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsAttendeeBirthday",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsFirstTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsSecondTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "FillRoomStatistics",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "fillContactPersons",
                        "in": "query",
                        "description": "True to fill Contact person details",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Attendee check-in records.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendeeCheckInsViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendeeCheckInsViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendeeCheckInsViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Check-in attendee",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "CheckInAttendee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "True to override capacity requirements",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee check-in data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns Attendee check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/event/check-in": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets attendee check-in records",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal access only",
                "operationId": "GetLatestAttendanceCheckedInEvent",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "query",
                        "description": "Person ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventLiteViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventLiteViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventLiteViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/check-out": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Check-out attendee",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "CheckOutAttendee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee check-in data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Attendee check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid check-out data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/check-in/occurrence/{occurrenceId}": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Check-in attendees for occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "CheckInAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "Sub venue ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personIds",
                        "in": "query",
                        "description": "Person IDs to check-in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "checkInTime",
                        "in": "query",
                        "description": "Check-in UTC date-time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "True to override capacity requirements",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Operation completed successfully."
                    }
                }
            }
        },
        "/api/event/{id}/check-in/child": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Check-in child attendees for occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "CheckInChildAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "True to override capacity requirements",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of children to check-in",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Operation completed successfully."
                    }
                }
            }
        },
        "/api/event/{id}/check-out/occurrence/{occurrenceId}": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Check-out attendees for occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "CheckOutAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                        }
                    },
                    {
                        "name": "Gender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsAttendeeBirthday",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsFirstTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsSecondTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "FillRoomStatistics",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee data to check-out",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeCheckOutViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeCheckOutViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeCheckOutViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeCheckOutViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Operation completed successfully."
                    },
                    "400": {
                        "description": "Invalid check-out data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/check-in/transfer": {
            "put": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Transfer attendee to another sub-venue",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "TransferAttendee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "True to override capacity requirements",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee check-in data (with new sub venue)",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns Attendee check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/event/{id}/check-in/bulk-transfer": {
            "put": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Transfer attendees to another sub-venue",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "TransferAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                        }
                    },
                    {
                        "name": "Gender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsAttendeeBirthday",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsFirstTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsSecondTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "FillRoomStatistics",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "description": "True to override capacity requirements",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee data for transfer",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeTransferViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeTransferViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeTransferViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_BulkAttendeeTransferViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Invalid transfer data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns Attendee check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/event/check-in/person-attendance": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Check person attendance for an Event check-in",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal systems access only",
                "operationId": "CheckAttendance",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Event ID. If null, the validation is performed for all events for 'now'",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID. If Event ID is null, it contains reference occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "Sub Venue ID. Should be null if Event ID is null",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personIds",
                        "in": "query",
                        "description": "Comma separated Person IDs to check",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/check-in/guardian/{guardianPersonId}/child": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets checked in children",
                "description": "**Authorization Policy:**<br />\r\nRequires Person Record Ownership<br />\r\n<br />\r\n**Data Access:**<br />\r\nRecord ownership only",
                "operationId": "GetCheckedInChildren",
                "parameters": [
                    {
                        "name": "Id",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "GenerateQrCode",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Base64",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "PixelsPerModule",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Size",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "EmbedLogo",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ForegroundColor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "BackgroundColor",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "LogoPercentage",
                        "in": "query",
                        "schema": {
                            "maximum": 100,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Transparent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "guardianPersonId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR Code PNG file.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInEventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInEventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInEventViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiresPersonRecordOwners": [
                        {
                            "RecordOwners": [
                                "guardianPersonId"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/check-in/occurrence/{occurrenceId}/notes": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets notes count for attendees",
                "description": "**Data Access:**<br />\r\nCheck-in Data Read",
                "operationId": "GetAttendeeCheckInNoteCounts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Person Unique IDs to get note counts",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of person note counts.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_Dto_PersonNotesCount"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_Dto_PersonNotesCount"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_Dto_PersonNotesCount"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/event/{id}/check-in/occurrence/{occurrenceId}/sms": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Send an SMS to Event attendeee for specific occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nManagement Access to Attendees.",
                "operationId": "SendSmsToAttendees",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                        }
                    },
                    {
                        "name": "Gender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsAttendeeBirthday",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsFirstTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsSecondTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "FillRoomStatistics",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/check-in/occurrence/{occurrenceId}/guardian/sms": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Send an SMS to Event attendeee guardians for specific occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nManagement Access to Children.",
                "operationId": "SendSmsToGuardians",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                        }
                    },
                    {
                        "name": "Gender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsAttendeeBirthday",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsFirstTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsSecondTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "FillRoomStatistics",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/check-in/occurrence/{occurrenceId}/all/sms": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Send SMS to all persons involved in checked-in event occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nManagement Access to Attendees and Children.",
                "operationId": "SendSms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_CheckInSmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_CheckInSmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_CheckInSmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_CheckInSmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/check-in/occurrence/{occurrenceId}/filtered/sms": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Send SMS to filtered persons involved in checked-in event occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nManagement Access to Attendees and Children.",
                "operationId": "SendFilteredSms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                        }
                    },
                    {
                        "name": "Gender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsAttendeeBirthday",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsFirstTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsSecondTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "FillRoomStatistics",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatuses"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/check-in/attendee/{id}/qr-code/png": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets person QR Code PNG image",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Attendees",
                "operationId": "GetAttendeeQrCodePng",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attendee check in ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "base64",
                        "in": "query",
                        "description": "True to return base64 data",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pixelsPerModule",
                        "in": "query",
                        "description": "Module size in pixels",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR Code PNG file."
                    },
                    "400": {
                        "description": "Invalid Person data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Person not found."
                    }
                }
            }
        },
        "/api/event/{id}/check-in/attendee/qr-code/png": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets person QR Code PNG image",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Attendees",
                "operationId": "GetAttendeeQrCodePng",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "query",
                        "description": "Person ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "SubVenue ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "base64",
                        "in": "query",
                        "description": "True to return base64 data",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "pixelsPerModule",
                        "in": "query",
                        "description": "Module size in pixels",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR Code PNG file."
                    },
                    "400": {
                        "description": "Invalid Person data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Person not found."
                    }
                }
            }
        },
        "/api/event/check-in/attendee/{id}/qr-code/svg": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets person QR Code SVG image",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Attendees",
                "operationId": "GetAttendeeQrCodeSvg",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Attendee check in ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pixelsPerModule",
                        "in": "query",
                        "description": "Module size in pixels",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR Code SVG file."
                    },
                    "400": {
                        "description": "Invalid Person data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Person not found."
                    }
                }
            }
        },
        "/api/event/{id}/check-in/attendee/qr-code/svg": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets person QR Code SVG image",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Attendees",
                "operationId": "GetAttendeeQrCodeSvg",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "query",
                        "description": "Person ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "SubVenue ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pixelsPerModule",
                        "in": "query",
                        "description": "Module size in pixels",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "QR Code SVG file."
                    },
                    "400": {
                        "description": "Invalid Person data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Person not found."
                    }
                }
            }
        },
        "/api/event/check-in/qr-code": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Gets person by QR Code string",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Attendees",
                "operationId": "GetAttendeeOrPersonIdByQrCode",
                "parameters": [
                    {
                        "name": "qrCode",
                        "in": "query",
                        "description": "QR Code string",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid QR code."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Person not found."
                    },
                    "409": {
                        "description": "Unsupported QR code."
                    }
                }
            }
        },
        "/api/event/{id}/check-in/attendee/print-label": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Print event attendee label",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Attendees",
                "operationId": "PrintAttendeeLabel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "SubVenue ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Person IDs",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Label was sent to printer."
                    },
                    "400": {
                        "description": "Invalid Person data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Person not found."
                    }
                }
            }
        },
        "/api/event/{id}/check-in/attendee/filtered/print-label": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Print event attendee labels (filtered)",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to Attendees",
                "operationId": "PrintAttendeeLabels",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                        }
                    },
                    {
                        "name": "Gender",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsAttendeeBirthday",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsFirstTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsSecondTime",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "FillRoomStatistics",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Person IDs",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Label was sent to printer."
                    },
                    "400": {
                        "description": "Invalid Person data."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Person not found."
                    }
                }
            }
        },
        "/api/event/{id}/occurrence/{occurrenceId}/check-in/export/preview": {
            "get": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Get check-in attendee export preview",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to Attendees.",
                "operationId": "GetDataExportPreview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueIds",
                        "in": "query",
                        "description": "Comma separated sub venue IDs, can be null",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Record count to preview",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/{id}/occurrence/{occurrenceId}/check-in/export/request": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Start check-in attendee export",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to Attendees.",
                "operationId": "RequestDataExport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueIds",
                        "in": "query",
                        "description": "Comma separated sub venue IDs, can be null",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export file format",
                        "schema": {
                            "$ref": "#/components/schemas/Event_App_DataExtractFormat"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/v2/event/{id}/mine/check-in": {
            "post": {
                "tags": [
                    "EventAttendeeCheckIn"
                ],
                "summary": "Check-in attendee (current user)",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "CheckInAttendee",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Attendee check-in data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Attendee check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/person/{personId}/note": {
            "get": {
                "tags": [
                    "EventAttendeeNote"
                ],
                "summary": "Gets attendee notes by person ID",
                "description": "**Data Access:**<br />\r\nREAD Access to events attendee.",
                "operationId": "GetAttendeeNotes",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee notes.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_NoteViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_NoteViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_NoteViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "post": {
                "tags": [
                    "EventAttendeeNote"
                ],
                "summary": "Add attendee note",
                "description": "**Data Access:**<br />\r\nWRITE Access to events attendee.",
                "operationId": "AddAttendeeNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Note",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee note.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NoteViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NoteViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NoteViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/person/{personId}/note/{noteId}": {
            "put": {
                "tags": [
                    "EventAttendeeNote"
                ],
                "summary": "Update attendee note",
                "description": "**Data Access:**<br />\r\nWRITE Access to events attendee.",
                "operationId": "UpdateAttendeeNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "noteId",
                        "in": "path",
                        "description": "Note ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Note",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_NoteViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee note.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NoteViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NoteViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_NoteViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "delete": {
                "tags": [
                    "EventAttendeeNote"
                ],
                "summary": "Delete attendee note",
                "description": "**Data Access:**<br />\r\nWRITE Access to events attendee.",
                "operationId": "RemoveAttendeeNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "Person ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "noteId",
                        "in": "path",
                        "description": "Note ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Attendee note deleted successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/eventbrite/organizer/{churchEntityId}": {
            "get": {
                "tags": [
                    "Eventbrite"
                ],
                "summary": "Gets Eventbrite Organizer by Church entity ID",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Global Application Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nAccess to Management of Global Application Settings.",
                "operationId": "GetEventbriteOrganizerByChurchEntityId",
                "parameters": [
                    {
                        "name": "churchEntityId",
                        "in": "path",
                        "description": "Church entity ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns Eventbrite Organizer.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Global Application Settings"
                            ]
                        }
                    ]
                }
            },
            "delete": {
                "tags": [
                    "Eventbrite"
                ],
                "summary": "Deletes Eventbrite Organizer",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Global Application Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nAccess to Management of Global Application Settings.",
                "operationId": "DeleteEventbriteOrganizer",
                "parameters": [
                    {
                        "name": "churchEntityId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Church Entity ID",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "Eventbrite Organizer was deleted successfully."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Global Application Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/eventbrite/organizer/church-entity": {
            "get": {
                "tags": [
                    "Eventbrite"
                ],
                "summary": "Gets all Eventbrite Organizers",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Global Application Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nAccess to Management of Global Application Settings.",
                "operationId": "GetAllEventbriteOrganizers",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "403": {
                        "description": "Not authorized."
                    },
                    "200": {
                        "description": "Returns Eventbrite Organizers.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Global Application Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/eventbrite/organizer": {
            "post": {
                "tags": [
                    "Eventbrite"
                ],
                "summary": "Creates Eventbrite Organizer",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Global Application Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nAccess to Management of Global Application Settings.",
                "operationId": "CreateEventbriteOrganizer",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Eventbrite Organizer Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Not authorized."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "200": {
                        "description": "Returns Eventbrite Organizer.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Global Application Settings"
                            ]
                        }
                    ]
                }
            },
            "put": {
                "tags": [
                    "Eventbrite"
                ],
                "summary": "Updates Eventbrite Organizer",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Global Application Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nAccess to Management of Global Application Settings.",
                "operationId": "UpdateEventbriteOrganizer",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Eventbrite Organizer Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "200": {
                        "description": "Returns Eventbrite Organizer.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_EventbriteOrganizerViewModel"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Global Application Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event-category/{id}": {
            "get": {
                "tags": [
                    "EventCategory"
                ],
                "summary": "Gets event category by ID",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to event categories.",
                "operationId": "GetEventCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "EventCategory ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event category."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            },
            "put": {
                "tags": [
                    "EventCategory"
                ],
                "summary": "Updates Event category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to event category.",
                "operationId": "UpdateEventCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event category data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns event category."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            },
            "delete": {
                "tags": [
                    "EventCategory"
                ],
                "summary": "Deletes Event category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to event category.",
                "operationId": "DeleteEventCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event category was deleted successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "409": {
                        "description": "Event category is in use."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event-category": {
            "get": {
                "tags": [
                    "EventCategory"
                ],
                "summary": "Gets all event categories with pagination",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to event categories.",
                "operationId": "GetAllEventCategories",
                "parameters": [
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "IncludeEventCount",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ChurchEntityId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event category list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            },
            "post": {
                "tags": [
                    "EventCategory"
                ],
                "summary": "Creates Event category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to event category.",
                "operationId": "CreateEventCategory",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Event category Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_EventCategoryViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns event category."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/occurrence/{occurrenceId}/export/preview": {
            "get": {
                "tags": [
                    "EventExportAttendee"
                ],
                "summary": "Get occurrence attendee export preview",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Attendees<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to Attendees.",
                "operationId": "GetDataExportPreview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Record count to preview",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Attendees"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/occurrence/{occurrenceId}/export/request": {
            "post": {
                "tags": [
                    "EventExportAttendee"
                ],
                "summary": "Start occurrence attendee export",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Attendees<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to Attendees.",
                "operationId": "RequestDataExport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export file format",
                        "schema": {
                            "$ref": "#/components/schemas/Event_App_DataExtractFormat"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Attendees"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/export/preview": {
            "get": {
                "tags": [
                    "EventExportAttendee"
                ],
                "summary": "Get historic attendee export preview",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Attendees<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to Attendees.",
                "operationId": "GetDataExportPreview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Record count to preview",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_DataExtractPreviewViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Attendees"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/export/request": {
            "post": {
                "tags": [
                    "EventExportAttendee"
                ],
                "summary": "Start historic attendee export",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Attendees<br />\r\n<br />\r\n**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nREAD Access to Attendees.",
                "operationId": "RequestDataExport",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Export file format",
                        "schema": {
                            "$ref": "#/components/schemas/Event_App_DataExtractFormat"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Attendees"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/ministry-invite": {
            "get": {
                "tags": [
                    "EventMinistryInvite"
                ],
                "summary": "Gets event ministry invites by event ID",
                "description": "**Data Access:**<br />\r\nREAD Access to events.",
                "operationId": "GetMinistryInvitesByEventId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeNames",
                        "in": "query",
                        "description": "(optional - defaults to false)when true the Ministry Names will be included in the response",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Ministry Invites."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event not found."
                    }
                }
            },
            "post": {
                "tags": [
                    "EventMinistryInvite"
                ],
                "summary": "Upserts event ministry invites for event",
                "description": "**Data Access:**<br />\r\nWRITE Access to events.",
                "operationId": "UpsertMinistryInvites",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of ministry invites",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Event Ministry Invite."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event not found."
                    }
                }
            },
            "put": {
                "tags": [
                    "EventMinistryInvite"
                ],
                "summary": "Add new event ministry invites for event",
                "description": "**Data Access:**<br />\r\nWRITE Access to events.",
                "operationId": "AddMinistryInvites",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "List of ministry invites",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_EventMinistryInviteViewModel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Event Ministry Invite."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "EventMinistryInvite"
                ],
                "summary": "Delete event ministry invites from event",
                "description": "**Data Access:**<br />\r\nWRITE Access to events.",
                "operationId": "DeleteMinistryInvites",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "inviteIds",
                        "in": "query",
                        "description": "List of ministry invite IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Ministry Invite."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Event not found."
                    }
                }
            }
        },
        "/api/event-public/{id}": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets Event by ID",
                "description": "**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "privateId",
                        "in": "query",
                        "description": "Private ID (necessary to set for private events)",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ExpandOptions",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExpandLimit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event-public/{id}/worship-service": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets a Worship Service by Event ID",
                "description": "**Data Access:**<br />\r\nAnonymous",
                "operationId": "GetWorshipServiceEventById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ExpandOptions",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExpandLimit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Worship Service Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found."
                    },
                    "400": {
                        "description": "Bad Request."
                    }
                }
            }
        },
        "/api/event-public/signup": {
            "post": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Register an Event attendee",
                "description": "**Data Access:**<br />\r\nAnonymous",
                "operationId": "RegisterEventAttendee",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Person/Event data to register",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventAttendeeRegistrationViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventAttendeeRegistrationViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventAttendeeRegistrationViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_EventAttendeeRegistrationViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Events occurrence."
                    },
                    "400": {
                        "description": "Invalid incoming data"
                    },
                    "409": {
                        "description": "Problems with person adding/selecting."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event-public/occurrences": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets published Event Occurrences",
                "description": "**Data Access:**<br />\r\nAnonymous\r\n\r\nSort order can be [\"name\" | \"occurrence\"],[\"asc\" | \"desc\"]",
                "operationId": "GetFilteredOccurrences",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Events with occurrences."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event-public/{eventId}/occurrences": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets published Event Occurrences for event",
                "description": "**Data Access:**<br />\r\nAnonymous",
                "operationId": "GetEventOccurrences",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns occurrences.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event-public/worship-service-occurrences": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets the worship service occurrences for the specified church entity id and date range",
                "description": "**Data Access:**<br />\r\nAnonymous",
                "operationId": "GetWorshipServiceOccurrence",
                "parameters": [
                    {
                        "name": "churchEntityId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns occurrences."
                    }
                }
            }
        },
        "/api/event-public/worship-service-occurrences-campuses": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets the worship service occurrences by church entity ids and date range",
                "description": "**Data Access:**<br />\r\nAnonymous",
                "operationId": "GetWorshipServiceOccurrenceByChurchEntityIds",
                "parameters": [
                    {
                        "name": "churchEntityIds",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns occurrences."
                    }
                }
            }
        },
        "/api/v2/event-public/{id}": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets Event by ID",
                "description": "**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "privateId",
                        "in": "query",
                        "description": "Private ID (necessary to set for private events)",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "ExpandOptions",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExpandLimit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel_V2"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel_V2"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventDetailsViewModel_V2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/v2/event-public/{eventId}/occurrences": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets published Event Occurrences for event",
                "description": "**Data Access:**<br />\r\nAnonymous",
                "operationId": "GetEventOccurrences",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "privateId",
                        "in": "query",
                        "description": "Private ID (necessary to set for private events)",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "usePublicViewModel",
                        "in": "query",
                        "description": "Boolean flag indicating whether response is an array of Saddleback.Cm.Services.Sdk.Event.ViewModels.Schedules.V2.PublicRegistrationOccurrenceViewModel (if True)\r\nor Saddleback.Cm.Services.Sdk.Event.ViewModels.Schedules.V2.OccurrencesViewModel (if False or omitted).\r\n** TEMPORARY:** This should go away ASAP and we should _ALWAYS_ return an array of Saddleback.Cm.Services.Sdk.Event.ViewModels.Schedules.V2.PublicRegistrationOccurrenceViewModel.",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns occurrences.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_PublicRegistrationOccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_PublicRegistrationOccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_PublicRegistrationOccurrenceViewModel_V2"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/v2/event-public/worship-service-occurrences": {
            "get": {
                "tags": [
                    "EventPublic"
                ],
                "summary": "Gets the worship service occurrences for the specified church entity id and date range",
                "description": "**Data Access:**<br />\r\nAnonymous",
                "operationId": "GetWorshipServiceOccurrence",
                "parameters": [
                    {
                        "name": "churchEntityId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns occurrences."
                    }
                }
            }
        },
        "/api/event/{id}/check-in-room": {
            "get": {
                "tags": [
                    "EventRoomCheckIn"
                ],
                "summary": "Gets check-in room records",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to events volunteer or Room leadership",
                "operationId": "GetCheckInRooms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Occurrence Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Occurrence Start Time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns check-in room records.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomsViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomsViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomsViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/check-in-room/{roomId}": {
            "get": {
                "tags": [
                    "EventRoomCheckIn"
                ],
                "summary": "Gets check-in room records",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to events volunteer or Room leadership",
                "operationId": "GetVolunteerCheckInRecords",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "roomId",
                        "in": "path",
                        "description": "Room (SubVenue) ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns check-in room records.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Sub venue not found."
                    }
                }
            }
        },
        "/api/event/{id}/check-in-room/open": {
            "post": {
                "tags": [
                    "EventRoomCheckIn"
                ],
                "summary": "Open the room",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events volunteer or Room leadership",
                "operationId": "OpenRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Open room parameters",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_OpenRoomViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_OpenRoomViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_OpenRoomViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_OpenRoomViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns check-in room records.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/check-in-room/close": {
            "post": {
                "tags": [
                    "EventRoomCheckIn"
                ],
                "summary": "Close the room",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events volunteer or Room leadership",
                "operationId": "CloseRoom",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "roomId",
                        "in": "query",
                        "description": "Room (SubVenue) ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns check-in room records.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameters."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/search-fields": {
            "get": {
                "tags": [
                    "EventSearch"
                ],
                "summary": "Gets a list of fields that can be used in event search queries",
                "description": "**Data Access:**<br />\r\nNone really ... ElasticSearch metadata.",
                "operationId": "GetSearchFields",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of field names"
                    }
                }
            }
        },
        "/api/event/search": {
            "get": {
                "tags": [
                    "EventSearch"
                ],
                "summary": "Search events",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\nAllowed With Permission: Read Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to events",
                "operationId": "Search",
                "parameters": [
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "maximum": 15768000000,
                            "minimum": 0,
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "StartTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EndTime",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_EventStatus"
                        }
                    },
                    {
                        "name": "OccurrenceStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "MyEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPaid",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CanRegister",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "AdvertiseOnWeb",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "CampusEvent",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Recurring",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsPrivate",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "EventFilterStatus",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Dto_EventFilterStatus"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of found events"
                    },
                    "400": {
                        "description": "Invalid filter parameters"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{eventId}/attendee/search": {
            "get": {
                "tags": [
                    "EventSearch"
                ],
                "summary": "Search event attendees",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Access Person Search<br />\r\n<br />\r\n**Data Access:**<br />\r\nSEARCH Access to persons",
                "operationId": "Search",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OccurrenceId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Attended",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsRegistered",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "HomeCampusIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size for pagination/load more.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number for pagination/load more.",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of found event attendees"
                    },
                    "400": {
                        "description": "Invalid filter parameters"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Access Person Search"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/person": {
            "get": {
                "tags": [
                    "EventSearch"
                ],
                "summary": "Gets Person's My Events",
                "description": "",
                "operationId": "GetPersonEvents",
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of person's my events",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_MyPersonEventResultsViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_MyPersonEventResultsViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_MyPersonEventResultsViewModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_MyPersonEventResultsViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_MyPersonEventResultsViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_MyPersonEventResultsViewModel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/event-public": {
            "get": {
                "tags": [
                    "EventSearchPublic"
                ],
                "summary": "List events grouped by date",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to events",
                "operationId": "GetEventList",
                "parameters": [
                    {
                        "name": "UseRawQuery",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupByDay",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExcludedCategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TagIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DayIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimeRanges",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HostMinistryId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "IncludeAllOccurrences",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ExpandOptions",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExpandLimit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of found events"
                    },
                    "400": {
                        "description": "Invalid filter parameters"
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/v2/event-public": {
            "get": {
                "tags": [
                    "EventSearchPublic"
                ],
                "summary": "List events grouped by date",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to events",
                "operationId": "GetEventList",
                "parameters": [
                    {
                        "name": "UseRawQuery",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupByDay",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "EventTypes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "CategoryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TagIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TagAndMode",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Days",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "HostMinistryId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "HostMinistryIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "VenueIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IncludeRelatedMinistriesEvents",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IncludeAllOccurrences",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "IsVirtual",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "StartDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "EndDate",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "TimeRanges",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "TimeZones",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PublishedChurchEntityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DefaultTimeZone",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExpandOptions",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ExpandLimit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns list of found events"
                    },
                    "400": {
                        "description": "Invalid filter parameters"
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/event/reassign-person": {
            "post": {
                "tags": [
                    "EventUtils"
                ],
                "summary": "Reassign person in all tables of event microservice",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nTrusted (internal) application access to events.",
                "operationId": "ReassignPerson",
                "parameters": [
                    {
                        "name": "oldPersonId",
                        "in": "query",
                        "description": "Old person unique ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "newPersonId",
                        "in": "query",
                        "description": "New person unique ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Person was reassigned successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/volunteer-check-in": {
            "get": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Gets volunteer check-in records",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to events volunteer or Room leadership",
                "operationId": "GetVolunteerCheckInRecords",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "servingOpportunityId",
                        "in": "query",
                        "description": "Serving Opportunity ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "personId",
                        "in": "query",
                        "description": "Person ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "SubVenue ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date-time in UCT",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Check in status",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_VolunteerCheckInStatus"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Volunteer check-in records.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "post": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Check-in volunteer",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events volunteer or Room leadership",
                "operationId": "CheckInVolunteer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Volunteer check-in data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Volunteer check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/volunteer-check-in/attendance": {
            "get": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Get person IDs for volunteer attendance for an Event check-in",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal systems access only",
                "operationId": "GetEventCheckInVolunteerPersonIds",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueIds",
                        "in": "query",
                        "description": "Sub Venue IDs. Can be null",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "personIds",
                        "in": "query",
                        "description": "Comma separated Person IDs to check",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Event Attendee.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventAttendeeViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/{id}/available-volunteer": {
            "get": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Gets volunteers for occurrence check-in",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nREAD Access to events volunteer or Room leadership",
                "operationId": "GetVolunteersToCheckIn",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ServingOpportunityIds",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "OccurrenceId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "SubVenueId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PersonId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "AllRelatedVolunteers",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Volunteer check-in records.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_ServingOpportunityVolunteerRoomInfoViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_ServingOpportunityVolunteerRoomInfoViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_App_ServingOpportunityVolunteerRoomInfoViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/volunteer-check-out": {
            "post": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Check-out volunteer",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events volunteer or Room leadership",
                "operationId": "CheckOutVolunteer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Volunteer check-in data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Volunteer check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid check-out data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/volunteer-check-in/transfer": {
            "put": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Transfer volunteer to another sub-venue",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events attendee or Room leadership",
                "operationId": "TransferVolunteer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Volunteer check-in data (with new sub venue)",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Volunteer check-in data.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_VolunteerCheckInViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/volunteer-check-in/occurrence/{occurrenceId}": {
            "post": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Check-in volunteers for occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events volunteer or Room leadership",
                "operationId": "CheckInVolunteers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "servingOpportunityId",
                        "in": "query",
                        "description": "Serving Opportunity ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "Sub venue ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personIds",
                        "in": "query",
                        "description": "Person IDs to check-in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "checkInTime",
                        "in": "query",
                        "description": "Check-in UTC date-time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation completed successfully."
                    },
                    "400": {
                        "description": "Invalid check-in data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/volunteer-check-out/occurrence/{occurrenceId}": {
            "post": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Check-out volunteers for occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n\r\n**Data Access:**<br />\r\nWRITE Access to events volunteer or Room leadership",
                "operationId": "CheckOutVolunteers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "servingOpportunityId",
                        "in": "query",
                        "description": "Serving Opportunity ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueId",
                        "in": "query",
                        "description": "Sub venue ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "personIds",
                        "in": "query",
                        "description": "Person IDs to check-out",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "checkOutTime",
                        "in": "query",
                        "description": "Check-in UTC date-time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation completed successfully."
                    },
                    "400": {
                        "description": "Invalid check-out data."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/event/{id}/volunteer-check-in/occurrence/{occurrenceId}/sms": {
            "post": {
                "tags": [
                    "EventVolunteerCheckIn"
                ],
                "summary": "Send an SMS to Event volunteer for specific occurrence",
                "description": "**Inline Authorization Checks:**<br />\r\nScoped permission validation is applied\r\n            \r\n**Data Access:**<br />\r\nWRITE Access to Attendees.",
                "operationId": "SendSms",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "subVenueIds",
                        "in": "query",
                        "description": "SubVenue IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "SMS Body",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_SmsViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/api/event/worship-service/occurrences": {
            "get": {
                "tags": [
                    "EventWorshipService"
                ],
                "summary": "Gets instantiated Occurrences with assigned Worship Service Category",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEventOccurrences",
                "parameters": [
                    {
                        "name": "churchEntityId",
                        "in": "query",
                        "description": "Church Entity ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "excludeChurchEntityId",
                        "in": "query",
                        "description": "Church Entity ID to exclude",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for occurrences",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for occurrences",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "worshipServiceCategoryId",
                        "in": "query",
                        "description": "Filter by specific worship service category",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "onlyActive",
                        "in": "query",
                        "description": "true to return only active occurrences",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns occurrence list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/worship-service/occurrence/{occurrenceId}": {
            "get": {
                "tags": [
                    "EventWorshipService"
                ],
                "summary": "Gets Occurrence with Worship Service Category for a single Occurrence by ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetEventOccurrence",
                "parameters": [
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/worship-service/person/{personId}/most-commonly-attended": {
            "get": {
                "tags": [
                    "EventWorshipService"
                ],
                "summary": "Gets most commonly attended service for person",
                "description": "**Authorization Policy:**<br />\r\nAllowed with Person Record Ownership<br />\r\nAllowed With Permission: Read Personal Data<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to people.",
                "operationId": "GetMostCommonlyAttendedServices",
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "PersonId",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_EventViewModel"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowWithPersonRecordOwners": [
                        {
                            "RecordOwners": [
                                "personId"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Personal Data"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/worship-service/most-commonly-attended": {
            "get": {
                "tags": [
                    "EventWorshipService"
                ],
                "summary": "Gets most commonly attended service for persons",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Permission: Read Personal Data<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to people.",
                "operationId": "GetMostCommonlyAttendedServices",
                "parameters": [
                    {
                        "name": "personIds",
                        "in": "query",
                        "description": "PersonIds",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventPersonViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventPersonViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_EventPersonViewModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Personal Data"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/event/worship-service/category": {
            "put": {
                "tags": [
                    "EventWorshipService"
                ],
                "summary": "Assigns Worship Service Category to specific Occurrence",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Permission: Update Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Events.",
                "operationId": "AssignCategoryToOccurrence",
                "parameters": [
                    {
                        "name": "worshipServiceCategoryId",
                        "in": "query",
                        "description": "Worship Service Category ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Occurrence",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Completed successfully."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            },
            "get": {
                "tags": [
                    "EventWorshipService"
                ],
                "summary": "Get Worship Service Category for specific Occurrence",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Permission: Read Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to Events.",
                "operationId": "GetCategoryForOccurrence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Occurrence ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Occurrence date",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Occurrence start time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/export/event-attendee": {
            "get": {
                "tags": [
                    "ExportDownload"
                ],
                "description": "**Authorization Policy:**<br />\r\nRequires DataExtractType: EventAttendee<br />\r\n",
                "operationId": "DownloadEventAttendeeExport",
                "parameters": [
                    {
                        "name": "File",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Format",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Token",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "x-hc-security": {
                    "RequiresDataExtractTypes": [
                        {
                            "DataExtractTypes": [
                                "EventAttendee"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/export/event-attendee-check-in": {
            "get": {
                "tags": [
                    "ExportDownload"
                ],
                "description": "**Authorization Policy:**<br />\r\nRequires DataExtractType: CheckInEventAttendee<br />\r\n",
                "operationId": "DownloadEventAttendeeCheckInExport",
                "parameters": [
                    {
                        "name": "File",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Format",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Token",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "x-hc-security": {
                    "RequiresDataExtractTypes": [
                        {
                            "DataExtractTypes": [
                                "CheckInEventAttendee"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/infrastructure/has-church-entity-association": {
            "get": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Check if events or schedules have church entity association",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nOnly for trusted applications.",
                "operationId": "HasChurchEntityAssociation",
                "parameters": [
                    {
                        "name": "churchEntityId",
                        "in": "query",
                        "description": "Church Entity ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns result value."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/infrastructure/which-venues-are-associated": {
            "get": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Check if events have venue association",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nOnly for trusted applications.",
                "operationId": "WhichVenuesAreAssociated",
                "parameters": [
                    {
                        "name": "venueIds",
                        "in": "query",
                        "description": "Comma separated Venue ID list",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns result list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/infrastructure/which-subvenues-are-associated": {
            "get": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Check if events have subvenue association",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nOnly for trusted applications.",
                "operationId": "WhichSubVenuesAreAssociated",
                "parameters": [
                    {
                        "name": "subVenueIds",
                        "in": "query",
                        "description": "Comma separated SubVenue ID list",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns result list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/infrastructure/occurrence-venue": {
            "put": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Get enabled venues in events for occurrence IDs",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nOnly for trusted applications.",
                "operationId": "GetVenueIdsForOccurrences",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Occurrences list",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_OccurrenceVenueViewModel"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_OccurrenceVenueViewModel"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_OccurrenceVenueViewModel"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event_OccurrenceVenueViewModel"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns result list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/infrastructure/schedule/{scheduleId}/venue": {
            "get": {
                "tags": [
                    "Infrastructure"
                ],
                "summary": "Get enabled venues for an Event by Schedule ID",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />\r\nOnly for trusted applications.\r\n\r\n**More Info:**<br />\r\nProvides similar information as M:Saddleback.Cm.WebApp.Event.Controllers.InfrastructureController.GetVenueIdsForOccurrences(System.Collections.Generic.IEnumerable{Saddleback.Cm.Services.Sdk.Event.ViewModels.OccurrenceVenueViewModel})\r\nbut without specific Occurrences.",
                "operationId": "GetVenueIdsForSchedule",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Optional: Date/Time for which to check enabled venues.  Defaults to now if ommitted.\r\n**IMPORTANT:** This Date/Time is presumed to be in UTC.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "includePastVenues",
                        "in": "query",
                        "description": "Boolean: Whether or not to include Venues even if the basis date is past the end date of the event/venue association.\r\nOptional; defaults to false (meaning only include venue associations if the query date is inside the venue association's start and end date range).",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns result list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/occurrence/{id}": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets Occurrence by ID",
                "description": "**Data Access:**<br />\r\nREAD of Occurrence data.  No special access requirements.",
                "operationId": "GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Occurrence not found."
                    }
                }
            }
        },
        "/api/occurrence/{id}/valid-edit-range": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Get Occurrence valid date-time range for edited value",
                "description": "**Data Access:**<br />\r\nNo special access",
                "operationId": "GetValidEditRangeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_DateRangeViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_DateRangeViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_DateRangeViewModel"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Occurrence not found."
                    }
                }
            }
        },
        "/api/occurrence/date": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets Occurrence of schedule by local date time",
                "description": "**Data Access:**<br />\r\nREAD of Occurrence data.  No special access requirements.",
                "operationId": "GetOccurrenceByDate",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Date-time in local time OR UTC (depends on utc parameter)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Schedule not found."
                    }
                }
            }
        },
        "/api/occurrence/next": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets next Occurrence of schedule for specific date (in local time)",
                "description": "**Data Access:**<br />\r\nREAD of Occurrence data.  No special access requirements.",
                "operationId": "GetNextOccurrence",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Date-time in local time OR UTC (depends on utc parameter)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utc",
                        "in": "query",
                        "description": "true to use date-time as UTC",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Schedule not found."
                    }
                }
            }
        },
        "/api/occurrence/next-current-previous": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets next, current, and previous (most recent) Occurrences of schedule for specific date (in local time)",
                "description": "**Data Access:**<br />\r\nREAD of Occurrence data.  No special access requirements.",
                "operationId": "GetNextCurrentPreviousOccurrences",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Date-time in local time OR UTC (depends on utc parameter)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utc",
                        "in": "query",
                        "description": "true to use date-time as UTC",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrencesViewModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrencesViewModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrencesViewModel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Schedule not found."
                    }
                }
            }
        },
        "/api/occurrence": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Search Occurrences",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD of Occurrence data.  Anonymous access is allowed as there is no sensitive data access involved and this endpoint is used for certain integrations.",
                "operationId": "SearchOccurrences",
                "parameters": [
                    {
                        "name": "DateRangeStart",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DateRangeEnd",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ChurchEntityId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ScheduleEntityTypeId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ScheduleId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Schedule not found."
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/v2/occurrence/{id}": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets Occurrence by ID",
                "description": "**Data Access:**<br />\r\nNo special access",
                "operationId": "GetById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Occurrence not found."
                    }
                }
            }
        },
        "/api/v2/occurrence/date": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets Occurrence of schedule by local date time",
                "description": "**Data Access:**<br />\r\nREAD of Occurrence data.  No special access requirements.",
                "operationId": "GetOccurrenceByDate",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Date-time in local time OR UTC (depends on utc parameter)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Schedule not found."
                    }
                }
            }
        },
        "/api/v2/occurrence/next": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets next Occurrence of schedule for specific date (in local time)",
                "description": "**Data Access:**<br />\r\nREAD of Occurrence data.  No special access requirements.",
                "operationId": "GetNextOccurrence",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Date-time in local time OR UTC (depends on utc parameter)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utc",
                        "in": "query",
                        "description": "true to use date-time as UTC",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Schedule not found."
                    }
                }
            }
        },
        "/api/v2/occurrence/list": {
            "post": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets Occurrences by ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Scopes: hc:internal-systems, hc:schedule-get<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal or ScheduleGet scope access",
                "operationId": "GetOccurrencesByIds",
                "requestBody": {
                    "description": "Occurrence IDs",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "text/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems",
                                "hc:schedule-get"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/v2/occurrence/schedule/{id}": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets Occurrences by Schedule and Date Range",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Scopes: hc:internal-systems, hc:schedule-get<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal or ScheduleGet scope access",
                "operationId": "GetOccurrencesBySchedule",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End Date",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "statuses",
                        "in": "query",
                        "description": "Occurrence Statuses",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems",
                                "hc:schedule-get"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/v2/occurrence/getsert": {
            "post": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Getsert Occurrence",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Scopes: hc:internal-systems, hc:schedule-get<br />\r\n<br />\r\n**Data Access:**<br />\r\nInternal or ScheduleGet scope access",
                "operationId": "Getsert",
                "requestBody": {
                    "description": "Occurrence",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems",
                                "hc:schedule-get"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/v2/occurrence/next-current-previous": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Gets next, current, and previous (most recent) Occurrences of schedule for specific date (in local time)",
                "description": "**Data Access:**<br />\r\nREAD of Occurrence data.  No special access requirements.",
                "operationId": "GetNextCurrentPreviousOccurrences",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "query",
                        "description": "Schedule ID",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "dateTime",
                        "in": "query",
                        "description": "Date-time in local time OR UTC (depends on utc parameter)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utc",
                        "in": "query",
                        "description": "true to use date-time as UTC",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrencesViewModel_V2"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrencesViewModel_V2"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_OccurrencesViewModel_V2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Schedule not found.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_App_ProblemDetails"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v2/occurrence": {
            "get": {
                "tags": [
                    "Occurrence"
                ],
                "summary": "Searches Occurrences",
                "description": "**Authorization Policy:**<br />\r\nAnonymous Access Allowed<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD of Occurrence data.  Anonymous access is allowed as there is no sensitive data access involved and this endpoint is used for certain integrations.",
                "operationId": "SearchOccurrences",
                "parameters": [
                    {
                        "name": "DateRangeStart",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "DateRangeEnd",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ChurchEntityId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ScheduleEntityTypeId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "ScheduleId",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Status",
                        "in": "query",
                        "schema": {
                            "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                        }
                    },
                    {
                        "name": "SortQuery",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SortColumns",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/Event_App_Sorting"
                            }
                        }
                    },
                    {
                        "name": "SortColumn",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "IsDescendingSort",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "Offset",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Limit",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "DBLimit",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Completed successfully.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_PublicOccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_PublicOccurrenceViewModel_V2"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event_PublicOccurrenceViewModel_V2"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "404": {
                        "description": "Schedule not found."
                    }
                },
                "x-hc-security": {
                    "AllowAnonymous": true
                }
            }
        },
        "/api/reminder/copy-by-schedule": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Copies reminders from sourceScheduleId to targetScheduleId",
                "operationId": "CopyReminders",
                "parameters": [
                    {
                        "name": "sourceScheduleId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "targetScheduleId",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/reminder/{id}": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Gets reminder by ID",
                "description": "**Data Access:**<br />\r\nREAD Access to Reminders.",
                "operationId": "GetReminderById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reminder ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Reminder."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "put": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Updates Reminder",
                "description": "**Data Access:**<br />\r\nWRITE Access to Reminder.",
                "operationId": "UpdateReminder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reminder ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Reminder Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Reminder."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Deletes Reminder",
                "description": "**Data Access:**<br />\r\nWRITE Access to Reminder.",
                "operationId": "DeleteReminder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reminder ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reminder was deleted successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "409": {
                        "description": "Reminder is in use."
                    }
                }
            }
        },
        "/api/reminder": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Gets Reminders list by Reminder IDs",
                "description": "**Data Access:**<br />\r\nREAD Access to Reminders.",
                "operationId": "GetRemindersByIds",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Reminder IDs",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Reminders."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            },
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Creates Reminder",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\nAllowed With one of these Permissions: Create Person Notes, Update Person Notes, Update Event, Update Serving Opportunities<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Reminder.",
                "operationId": "CreateReminder",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Reminder Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_ReminderViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Reminder."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ],
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Create Person Notes"
                            ]
                        },
                        {
                            "Permissions": [
                                "Update Person Notes"
                            ]
                        },
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Update Serving Opportunities"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/reminder/schedule/{scheduleId}": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Gets all Reminders for Schedule with pagination",
                "description": "**Data Access:**<br />\r\nREAD Access to Reminders.",
                "operationId": "GetRemindersByScheduleId",
                "parameters": [
                    {
                        "name": "scheduleId",
                        "in": "path",
                        "description": "Schedule ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Reminder list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/reminder/occurrence/{occurrenceId}": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Gets all Reminders for Occurrence with pagination",
                "description": "**Data Access:**<br />\r\nREAD Access to Reminders.",
                "operationId": "GetRemindersByOccurrenceId",
                "parameters": [
                    {
                        "name": "occurrenceId",
                        "in": "path",
                        "description": "Occurrence ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "includeRecurring",
                        "in": "query",
                        "description": "Return recurring reminders too",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Reminder list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                }
            }
        },
        "/api/reminder/email-variables": {
            "get": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Get email variables",
                "description": "**Data Access:**<br />\r\nNo specific access",
                "operationId": "GetEmailVariables",
                "parameters": [
                    {
                        "name": "scheduleEntityTypeId",
                        "in": "query",
                        "description": "Schedule Entity Type Id",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/reminder/attachment": {
            "post": {
                "tags": [
                    "Reminder"
                ],
                "summary": "Upload a File for Email Attachment",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Update Serving Opportunities, Update Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nUploads the file to cloud storage (Amazon S3) where it can be viewed/downloaded by unauthenticated callers\r\nwith the URL (intended usage is to embed the URL to the file in an email in lieu of actually \"attaching\" the file).",
                "operationId": "UploadAttachment",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            },
                            "encoding": {
                                "file": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "File is empty.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event_Model_StandardErrorResponse"
                                }
                            }
                        }
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Update Serving Opportunities"
                            ]
                        },
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/room-category/{id}": {
            "get": {
                "tags": [
                    "RoomCategory"
                ],
                "summary": "Gets room category by ID",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Read Event, Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to room categories.",
                "operationId": "GetRoomCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Room category."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            },
            "put": {
                "tags": [
                    "RoomCategory"
                ],
                "summary": "Updates Room category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to room category.",
                "operationId": "UpdateRoomCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room category data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Room category."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            },
            "delete": {
                "tags": [
                    "RoomCategory"
                ],
                "summary": "Deletes Room category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to room category.",
                "operationId": "DeleteRoomCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Room category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Room category was deleted successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "409": {
                        "description": "Room category is in use."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/room-category": {
            "get": {
                "tags": [
                    "RoomCategory"
                ],
                "summary": "Gets all room categories with pagination",
                "description": "**Authorization Policy:**<br />\r\nAllowed With one of these Permissions: Read Event, Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to room categories.",
                "operationId": "GetAllRoomCategories",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Room category list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        },
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            },
            "post": {
                "tags": [
                    "RoomCategory"
                ],
                "summary": "Creates Room category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Manage Event Settings<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to room category.",
                "operationId": "CreateRoomCategory",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Room category Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_RoomCategoryViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Room category."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Manage Event Settings"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/rpc": {
            "post": {
                "tags": [
                    "Rpc"
                ],
                "summary": "Handle RPC request",
                "description": "**Authorization Policy:**<br />\r\nAllowed With Scope: hc:internal-systems<br />\r\n<br />\r\n**Data Access:**<br />",
                "operationId": "Rpc",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "RPC command",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_RpcRestContainer"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_RpcRestContainer"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_RpcRestContainer"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_App_RpcRestContainer"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns RPC operation result."
                    },
                    "400": {
                        "description": "Invalid RPC model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "AllowedWithScopes": [
                        {
                            "Scopes": [
                                "hc:internal-systems"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/schedule/reset-cache": {
            "post": {
                "tags": [
                    "Schedule"
                ],
                "summary": "Clear Schedule cache on all App instances",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Access Developer Diagnostics<br />\r\n<br />\r\n**Data Access:**<br />\r\nReloads Schedule cache from database. No modifications to any persistent data.",
                "operationId": "ResetScheduleCache",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation is completed successfully."
                    },
                    "403": {
                        "description": "Not authorized. Must have the required Permissions."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Access Developer Diagnostics"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/version": {
            "get": {
                "tags": [
                    "Version"
                ],
                "operationId": "Get",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/worship-service-category/{id}": {
            "get": {
                "tags": [
                    "WorshipServiceCategory"
                ],
                "summary": "Gets Worship Service category by ID",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Read Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to Worship Service categories.",
                "operationId": "GetWorshipServiceCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Worship Service Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns WorshipServiceCategory."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            },
            "put": {
                "tags": [
                    "WorshipServiceCategory"
                ],
                "summary": "Updates Worship Service Category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Worship Service category.",
                "operationId": "UpdateWorshipServiceCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Worship Service category data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Worship Service category."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            },
            "delete": {
                "tags": [
                    "WorshipServiceCategory"
                ],
                "summary": "Deletes Worship Service Category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Worship Service category.",
                "operationId": "DeleteWorshipServiceCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Worship Service category was deleted successfully."
                    },
                    "403": {
                        "description": "Not authorized."
                    },
                    "409": {
                        "description": "Worship Service Category is in use."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        },
        "/api/worship-service-category": {
            "get": {
                "tags": [
                    "WorshipServiceCategory"
                ],
                "summary": "Gets all Worship Service Categories with pagination",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Read Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nREAD Access to Worship Service categories.",
                "operationId": "GetAllWorshipServiceCategories",
                "parameters": [
                    {
                        "name": "pageSize",
                        "in": "query",
                        "description": "Page size",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 25
                        }
                    },
                    {
                        "name": "pageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns Worship Service category list."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Read Event"
                            ]
                        }
                    ]
                }
            },
            "post": {
                "tags": [
                    "WorshipServiceCategory"
                ],
                "summary": "Creates Worship Service Category",
                "description": "**Authorization Policy:**<br />\r\nRequires access to Permission: Update Event<br />\r\n<br />\r\n**Data Access:**<br />\r\nWRITE Access to Worship Service category.",
                "operationId": "CreateWorshipServiceCategory",
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Worship Service category Data",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event_WorshipServiceCategoryViewModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns Worship Service category."
                    },
                    "400": {
                        "description": "Invalid model."
                    },
                    "403": {
                        "description": "Not authorized."
                    }
                },
                "x-hc-security": {
                    "RequiredPermissions": [
                        {
                            "Permissions": [
                                "Update Event"
                            ]
                        }
                    ]
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Event_AccommodationViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isUsed": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_AttendanceViewModel": {
                "type": "object",
                "properties": {
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "actualDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "attended": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "past": {
                        "type": "boolean"
                    },
                    "assigned": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_App_AttendeeCheckInViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_AttendeeCheckInStatus"
                    },
                    "checkInTime": {
                        "type": "string",
                        "description": "Check in time in UTC",
                        "format": "date-time",
                        "nullable": true
                    },
                    "checkOutTime": {
                        "type": "string",
                        "description": "Check out time in UTC",
                        "format": "date-time",
                        "nullable": true
                    },
                    "guardianPersonId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "contactPersonId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "checkedInBy": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_PersonViewModel"
                    },
                    "contactPerson": {
                        "$ref": "#/components/schemas/Event_PersonViewModel"
                    },
                    "subVenue": {
                        "$ref": "#/components/schemas/Event_SubVenueViewModel"
                    },
                    "checkOutQrCode": {
                        "type": "string",
                        "description": "Check out QR code BMP image",
                        "format": "byte",
                        "nullable": true
                    },
                    "checkOutQrCodeBase64": {
                        "type": "string",
                        "description": "Check out QR code BMP image base64 string",
                        "nullable": true
                    },
                    "coreMilestones": {
                        "$ref": "#/components/schemas/Event_CoreMilestonesViewModel"
                    },
                    "checkInRoomId": {
                        "type": "integer",
                        "description": "Initial room ID for specific attendee check-in",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_AttendeeCheckInsViewModel": {
                "type": "object",
                "properties": {
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                        },
                        "nullable": true
                    },
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "maleCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "femaleCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "roomStatistics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_Dto_RoomStatistics"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_BulkAttendeeCheckOutViewModel": {
                "type": "object",
                "properties": {
                    "attendeePersonIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "checkOutDate": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_BulkAttendeeTransferViewModel": {
                "type": "object",
                "properties": {
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "attendeePersonIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_CheckInEventViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_App_AttendeeCheckInViewModel"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "canRegister": {
                        "type": "boolean"
                    },
                    "isPaid": {
                        "type": "boolean"
                    },
                    "isSelfCheckInEnabled": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "maxCapacityUnpublish": {
                        "type": "boolean"
                    },
                    "webHeader": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeader": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnail": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "allowSingleOccurrenceRegistration": {
                        "type": "boolean"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "virtualUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "registrationStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "registrationEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRegistrationClosed": {
                        "type": "boolean"
                    },
                    "publishedEmail": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "publishedPhone": {
                        "maxLength": 33,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "privateId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isPrivate": {
                        "type": "boolean"
                    },
                    "eventContactIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_ScheduleViewModel"
                    },
                    "venues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueViewModel"
                        },
                        "nullable": true
                    },
                    "subVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventSubVenueViewModel"
                        },
                        "nullable": true
                    },
                    "accommodations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_AccommodationViewModel"
                        },
                        "nullable": true
                    },
                    "publicationStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventPublishViewModel"
                        },
                        "nullable": true
                    },
                    "publishedChurchEntityIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "worshipServiceCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "customRegistrationNotificationSettings": {
                        "$ref": "#/components/schemas/Event_EventCustomRegistrationNotificationSettingsViewModel"
                    },
                    "allowGuestRegistration": {
                        "type": "boolean"
                    },
                    "publishedContactName": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_CheckInRoomViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "description": "Room ID (Sub-venue should be a room or venue if no other rooms exist)",
                        "format": "int32"
                    },
                    "isRoomForChildren": {
                        "type": "boolean"
                    },
                    "noGradeRestriction": {
                        "type": "boolean"
                    },
                    "overrideVolunteerRequirements": {
                        "type": "boolean"
                    },
                    "openTime": {
                        "type": "string",
                        "description": "Open time in UTC",
                        "format": "date-time",
                        "nullable": true
                    },
                    "closeTime": {
                        "type": "string",
                        "description": "Close time in UTC",
                        "format": "date-time",
                        "nullable": true
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "attendeeCount": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "volunteerCount": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isFull": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "roomCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "roomCategory": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_CheckInRoomsViewModel": {
                "type": "object",
                "properties": {
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "statistics": {
                        "$ref": "#/components/schemas/Event_Dto_CheckInRoomStatistics"
                    },
                    "rooms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_App_CheckInRoomViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_DataExtractFormat": {
                "enum": [
                    "Unknown",
                    "Excel",
                    "CSV"
                ],
                "type": "string"
            },
            "Event_App_DataExtractPreviewViewModel": {
                "type": "object",
                "properties": {
                    "resultCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "results": {
                        "type": "array",
                        "items": { },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_DateEventStatisticsViewModel": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "ministryEventCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "campusEventCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_App_EventAttendeeRegistrationViewModel": {
                "required": [
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "occurrenceDateTime": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_ConnectionQuestionAnswerViewModel"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*)@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:|\\\\)+)\\])",
                        "type": "string"
                    },
                    "emailVerifyDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "sourceClientId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_EventHistoricPersonsViewModel": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventHistoricAttendeeViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_EventStatisticsViewModel": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "myEvents": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unpublished": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ministry": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "withRegistration": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "recurring": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "campus": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "byDate": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_App_DateEventStatisticsViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_EventbriteOrganizerViewModel": {
                "type": "object",
                "properties": {
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "organizerId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_IsoDayOfWeek": {
                "enum": [
                    "None",
                    "Monday",
                    "Tuesday",
                    "Wednesday",
                    "Thursday",
                    "Friday",
                    "Saturday",
                    "Sunday"
                ],
                "type": "string"
            },
            "Event_App_OccurrenceIdOrDateViewModel": {
                "type": "object",
                "properties": {
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "actualDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Event_App_OpenRoomViewModel": {
                "type": "object",
                "properties": {
                    "occurrenceId": {
                        "type": "integer",
                        "description": "Occurrence ID",
                        "format": "int32"
                    },
                    "roomId": {
                        "type": "integer",
                        "description": "Room (SubVenue) ID",
                        "format": "int32"
                    },
                    "isRoomForChildren": {
                        "type": "boolean",
                        "description": "True for children rooms"
                    },
                    "noGradeRestriction": {
                        "type": "boolean",
                        "description": "True to override child room requirements"
                    },
                    "overrideVolunteerRequirements": {
                        "type": "boolean",
                        "description": "True to cancel volunteer requirements"
                    },
                    "labelNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_Dto_LabelNumber"
                        },
                        "description": "Label numbers for the room for this occurrence",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_ProblemDetails": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "detail": {
                        "type": "string",
                        "nullable": true
                    },
                    "instance": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": { }
            },
            "Event_App_RpcRestContainer": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_ServingOpportunityVolunteerRoomInfoViewModel": {
                "type": "object",
                "properties": {
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "checkOutAllowed": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ministryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ministryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "servingOpportunityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "servingOpportunityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_PersonViewModel"
                    }
                },
                "additionalProperties": false
            },
            "Event_App_SetAttendanceViewModel": {
                "type": "object",
                "properties": {
                    "attended": {
                        "type": "boolean",
                        "description": "Attendance status. Null means 'not set'",
                        "nullable": true
                    },
                    "occurrences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_App_OccurrenceIdOrDateViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_App_SortDirection": {
                "enum": [
                    "Ascending",
                    "Descending"
                ],
                "type": "string"
            },
            "Event_App_Sorting": {
                "type": "object",
                "properties": {
                    "sortColumn": {
                        "type": "string",
                        "nullable": true
                    },
                    "sortDirection": {
                        "$ref": "#/components/schemas/Event_App_SortDirection"
                    }
                },
                "additionalProperties": false
            },
            "Event_CheckInSmsViewModel": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "childPersonIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "recipientIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "message": {
                        "maxLength": 153,
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Event_CommunicationTemplateAttachmentViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "emailTemplateId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileMimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_CommunicationTemplateDetailViewModel": {
                "required": [
                    "churchEntityId",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "emailSubject": {
                        "$ref": "#/components/schemas/Event_TemplateViewModel"
                    },
                    "emailBodyContent": {
                        "$ref": "#/components/schemas/Event_TemplateViewModel"
                    },
                    "emailBodyLayout": {
                        "$ref": "#/components/schemas/Event_TemplateViewModel"
                    },
                    "sms": {
                        "$ref": "#/components/schemas/Event_TemplateViewModel"
                    },
                    "emailAttachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_CommunicationTemplateAttachmentViewModel"
                        },
                        "nullable": true
                    },
                    "tempEmailAttachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_Model_CommunicationTemplateTempAttachmentDto"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "emailBody": {
                        "type": "string",
                        "nullable": true
                    },
                    "emailSubjectContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "smsBody": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isSystem": {
                        "type": "boolean"
                    },
                    "isEmail": {
                        "type": "boolean"
                    },
                    "isSMS": {
                        "type": "boolean"
                    },
                    "modifyDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "thumbnailImageUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ConnectionQuestionAnswerViewModel": {
                "required": [
                    "answerSourceId",
                    "questionId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "questionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "answerSourceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "answerCustomFieldId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "questionCustomFieldId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "booleanValue": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "dateTimeValue": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "numericValue": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "textValue": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "createdBy": {
                        "$ref": "#/components/schemas/Event_NamedEntityViewModel"
                    },
                    "modifyDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "modifiedBy": {
                        "$ref": "#/components/schemas/Event_NamedEntityViewModel"
                    }
                },
                "additionalProperties": false
            },
            "Event_CoreMilestonesViewModel": {
                "type": "object",
                "properties": {
                    "uniquePersonID": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "hasAcceptedChrist": {
                        "type": "boolean"
                    },
                    "isBaptised": {
                        "type": "boolean"
                    },
                    "hasAttendedClass101": {
                        "type": "boolean"
                    },
                    "hasAttendedClass201": {
                        "type": "boolean"
                    },
                    "hasAttendedClass301": {
                        "type": "boolean"
                    },
                    "hasAttendedClass401": {
                        "type": "boolean"
                    },
                    "hasSignedMembershipAgreement": {
                        "type": "boolean"
                    },
                    "hasSignedMaturityCovenant": {
                        "type": "boolean"
                    },
                    "hasSignedMinistryCovenant": {
                        "type": "boolean"
                    },
                    "hasSignedMissionCovenant": {
                        "type": "boolean"
                    },
                    "acceptedChristDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "baptismDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "attendedClass101Date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "attendedClass201Date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "attendedClass301Date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "attendedClass401Date": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "signedMembershipAgreementDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "signedMaturityCovenantDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "signedMinistryCovenantDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "signedMissionCovenantDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "firstContactDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "congregationDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isInMinistry": {
                        "type": "boolean"
                    },
                    "firstMinistryJoinDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isInSmallGroup": {
                        "type": "boolean"
                    },
                    "firstSmallGroupJoinDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isActiveInMissions": {
                        "type": "boolean"
                    },
                    "activeInMissionsDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_DateRangeViewModel": {
                "type": "object",
                "properties": {
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_AddMinistryMemberResult": {
                "type": "object",
                "properties": {
                    "addedToMinistry": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_AttendeeSmsStatusData": {
                "type": "object",
                "properties": {
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "contactPersonId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_Model_Person"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Dto_NotificationSmsStatus"
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_AttendeeSmsStatuses": {
                "type": "object",
                "properties": {
                    "hasSmsConfigurationError": {
                        "type": "boolean"
                    },
                    "statuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_Dto_AttendeeSmsStatusData"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_CheckInRoomStatistics": {
                "type": "object",
                "properties": {
                    "totalRooms": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalOpenRooms": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalCapacity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalAttendeesCheckedIn": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalVolunteersCheckedIn": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_EventFilterStatus": {
                "enum": [
                    "Upcoming",
                    "Past",
                    "Cancelled"
                ],
                "type": "string"
            },
            "Event_Dto_EventOccurrenceStatistics": {
                "type": "object",
                "properties": {
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "attended": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unattended": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_EventPublishDto": {
                "type": "object",
                "properties": {
                    "destination": {
                        "$ref": "#/components/schemas/Event_Model_EventPublishDestinationType"
                    },
                    "publish": {
                        "type": "boolean"
                    },
                    "isPrivate": {
                        "type": "boolean"
                    },
                    "churchEntityIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_LabelNumber": {
                "type": "object",
                "properties": {
                    "checkInLabelId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_NotificationSmsStatus": {
                "enum": [
                    "Available",
                    "PersonNotFound",
                    "NoCellPhone",
                    "NoEmergencyContactCellPhone",
                    "HasNotConsented",
                    "DoNotTextIsSet",
                    "StopWasSent",
                    "PersonIsDeceased",
                    "NotInWhiteList",
                    "Failed"
                ],
                "type": "string"
            },
            "Event_Dto_PersonNotesCount": {
                "type": "object",
                "properties": {
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notesCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_RoomStatistics": {
                "type": "object",
                "properties": {
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "checkedInCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "checkedOutCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Dto_WebHeader": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EmailViewModel": {
                "required": [
                    "body",
                    "replyEmail",
                    "senderName",
                    "subject"
                ],
                "type": "object",
                "properties": {
                    "recipientIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "senderName": {
                        "type": "string"
                    },
                    "fromEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "replyEmail": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "bodyTemplateName": {
                        "type": "string",
                        "nullable": true
                    },
                    "bodyMergeVars": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "attachments": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventAttendeeOccurrenceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "attended": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isCheckedIn": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_PersonViewModel"
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_ConnectionQuestionAnswerViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventAttendeeOccurrencesViewModel": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventAttendeeOccurrenceViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventAttendeeViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_ConnectionQuestionAnswerViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventCategoryViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isUsed": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "eventCount": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventCustomRegistrationNotificationSettingsViewModel": {
                "type": "object",
                "properties": {
                    "communicationTemplateId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "communicationTemplate": {
                        "$ref": "#/components/schemas/Event_CommunicationTemplateDetailViewModel"
                    },
                    "senderDisplayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "senderEmailAddress": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventDateViewModel": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "occurrences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_OccurrenceEventViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventDetailsViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "canRegister": {
                        "type": "boolean"
                    },
                    "isPaid": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "maxCapacityUnpublish": {
                        "type": "boolean"
                    },
                    "webHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "allowSingleOccurrenceRegistration": {
                        "type": "boolean"
                    },
                    "allowGuestRegistration": {
                        "type": "boolean"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "publishedEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "publishedContactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "publishedPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "privateId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isPrivate": {
                        "type": "boolean"
                    },
                    "eventCategoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_SchedulePublicViewModel"
                    },
                    "eventContacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonPublicContactViewModel"
                        },
                        "nullable": true
                    },
                    "eventVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueDetailsViewModel"
                        },
                        "nullable": true
                    },
                    "venues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueViewModel"
                        },
                        "nullable": true
                    },
                    "subVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventSubVenueViewModel"
                        },
                        "nullable": true
                    },
                    "accommodations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_AccommodationViewModel"
                        },
                        "nullable": true
                    },
                    "changeableSequenceIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "nullable": true
                    },
                    "worshipServiceCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "relatedEvents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventItemViewModel"
                        },
                        "nullable": true
                    },
                    "occurrence": {
                        "$ref": "#/components/schemas/Event_OccurrencePublicViewModel"
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventDetailsViewModel_V2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "canRegister": {
                        "type": "boolean"
                    },
                    "isPaid": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "webHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "webHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnail": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnailUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "allowSingleOccurrenceRegistration": {
                        "type": "boolean"
                    },
                    "allowGuestRegistration": {
                        "type": "boolean"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "publishedEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "publishedContactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "publishedPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_ScheduleViewModel_V2"
                    },
                    "eventContacts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonPublicContactViewModel"
                        },
                        "nullable": true
                    },
                    "eventVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueDetailsViewModel"
                        },
                        "nullable": true
                    },
                    "venues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueViewModel_V2"
                        },
                        "nullable": true
                    },
                    "subVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventSubVenueViewModel_V2"
                        },
                        "nullable": true
                    },
                    "accommodations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_AccommodationViewModel"
                        },
                        "nullable": true
                    },
                    "changeableSequenceIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean",
                            "nullable": true
                        },
                        "nullable": true
                    },
                    "worshipServiceCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "relatedEvents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventItemViewModel_V2"
                        },
                        "nullable": true
                    },
                    "publicationStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PublicEventPublishViewModel"
                        },
                        "nullable": true
                    },
                    "occurrence": {
                        "$ref": "#/components/schemas/Event_PublicOccurrenceViewModel_V2"
                    },
                    "registrationCapacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "registrationCount": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "localRegistrationStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "localRegistrationEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "utcRegistrationStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "utcRegistrationEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRegistrationClosed": {
                        "type": "boolean"
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventHistoricAttendeeViewModel": {
                "type": "object",
                "properties": {
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "registrationDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_PersonViewModel"
                    }
                },
                "additionalProperties": false
            },
            "Event_EventItemViewModel": {
                "type": "object",
                "properties": {
                    "eventStatus": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_SchedulePublicViewModel"
                    },
                    "occurrence": {
                        "$ref": "#/components/schemas/Event_OccurrencePublicViewModel"
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "eventVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueDetailsViewModel"
                        },
                        "nullable": true
                    },
                    "publishedChurchEntityIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "webHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "webHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnail": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnailUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventItemViewModel_V2": {
                "type": "object",
                "properties": {
                    "eventStatus": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_ScheduleViewModel_V2"
                    },
                    "occurrence": {
                        "$ref": "#/components/schemas/Event_PublicOccurrenceViewModel_V2"
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "eventVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueDetailsViewModel"
                        },
                        "nullable": true
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "webHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "webHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnail": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnailUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventLiteViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "canRegister": {
                        "type": "boolean"
                    },
                    "isPaid": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "maxCapacityUnpublish": {
                        "type": "boolean"
                    },
                    "webHeader": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "allowSingleOccurrenceRegistration": {
                        "type": "boolean"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "virtualUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "publishedEmail": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "publishedPhone": {
                        "maxLength": 33,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "worshipServiceCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventMinistryInviteViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ministryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ministryName": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventMinistryInviteStatus"
                    }
                },
                "additionalProperties": false
            },
            "Event_EventOccurrenceResponseViewModel_V2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueDetailsViewModel"
                        },
                        "nullable": true
                    },
                    "occurrence": {
                        "$ref": "#/components/schemas/Event_PublicOccurrenceViewModel_Core_V2"
                    }
                },
                "additionalProperties": false
            },
            "Event_EventOccurrenceViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "occurrence": {
                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "canRegister": {
                        "type": "boolean"
                    },
                    "isPaid": {
                        "type": "boolean"
                    },
                    "isSelfCheckInEnabled": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "maxCapacityUnpublish": {
                        "type": "boolean"
                    },
                    "webHeader": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeader": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnail": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "allowSingleOccurrenceRegistration": {
                        "type": "boolean"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "virtualUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "registrationStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "registrationEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRegistrationClosed": {
                        "type": "boolean"
                    },
                    "publishedEmail": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "publishedPhone": {
                        "maxLength": 33,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "privateId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isPrivate": {
                        "type": "boolean"
                    },
                    "eventContactIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_ScheduleViewModel"
                    },
                    "venues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueViewModel"
                        },
                        "nullable": true
                    },
                    "subVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventSubVenueViewModel"
                        },
                        "nullable": true
                    },
                    "accommodations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_AccommodationViewModel"
                        },
                        "nullable": true
                    },
                    "publicationStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventPublishViewModel"
                        },
                        "nullable": true
                    },
                    "publishedChurchEntityIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "worshipServiceCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "customRegistrationNotificationSettings": {
                        "$ref": "#/components/schemas/Event_EventCustomRegistrationNotificationSettingsViewModel"
                    },
                    "allowGuestRegistration": {
                        "type": "boolean"
                    },
                    "publishedContactName": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventPersonViewModel": {
                "type": "object",
                "properties": {
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventPublishViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/Event_Model_EventPublishDestinationType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventPublishStatus"
                    },
                    "publishDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "churchEntityIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventRegistrationCancellationRequestViewModel": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "nullable": true
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventSubVenueOccurrenceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "roomCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventSubVenueViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "roomCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "capacity": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "labelNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_Dto_LabelNumber"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventSubVenueViewModel_V2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "roomCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "capacity": {
                        "maximum": 2147483647,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventVenueDetailsViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "latitude": {
                        "maximum": 90,
                        "minimum": -90,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "maximum": 180,
                        "minimum": -180,
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "venueAddressId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "hasAssociation": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "venueAddress": {
                        "$ref": "#/components/schemas/Event_VenueAddressViewModel"
                    },
                    "venueCapacity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalVenueCapacity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_SubVenueViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventVenueOccurrenceViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "venueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "privateAddress": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "virtualUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_EventVenueViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "venueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "privateAddress": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventVenueViewModel_V2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "venueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "privateAddress": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_EventViewModel": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "canRegister": {
                        "type": "boolean"
                    },
                    "isPaid": {
                        "type": "boolean"
                    },
                    "isSelfCheckInEnabled": {
                        "type": "boolean"
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "maxCapacityUnpublish": {
                        "type": "boolean"
                    },
                    "webHeader": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeader": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnail": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "allowSingleOccurrenceRegistration": {
                        "type": "boolean"
                    },
                    "recurring": {
                        "type": "boolean"
                    },
                    "virtualUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "registrationStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "registrationEndDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isRegistrationClosed": {
                        "type": "boolean"
                    },
                    "publishedEmail": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "publishedPhone": {
                        "maxLength": 33,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "privateId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isPrivate": {
                        "type": "boolean"
                    },
                    "eventContactIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_ScheduleViewModel"
                    },
                    "venues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueViewModel"
                        },
                        "nullable": true
                    },
                    "subVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventSubVenueViewModel"
                        },
                        "nullable": true
                    },
                    "accommodations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_AccommodationViewModel"
                        },
                        "nullable": true
                    },
                    "publicationStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventPublishViewModel"
                        },
                        "nullable": true
                    },
                    "publishedChurchEntityIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "worshipServiceCategoryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "customRegistrationNotificationSettings": {
                        "$ref": "#/components/schemas/Event_EventCustomRegistrationNotificationSettingsViewModel"
                    },
                    "allowGuestRegistration": {
                        "type": "boolean"
                    },
                    "publishedContactName": {
                        "maxLength": 256,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_InterestedMinistryMemberBulkViewModel": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_MinistryMemberStatus"
                    },
                    "sourceId": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_AttendeeCheckInStatus": {
                "enum": [
                    "Invalid",
                    "CheckedIn",
                    "CheckedOut"
                ],
                "type": "string"
            },
            "Event_Model_CommunicationTemplateTempAttachmentDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileName": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileMimeType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_EventMinistryInviteStatus": {
                "enum": [
                    "Invalid",
                    "Open",
                    "Accepted",
                    "Rejected"
                ],
                "type": "string"
            },
            "Event_Model_EventPublishDestinationType": {
                "enum": [
                    "Invalid",
                    "TenantWebsite",
                    "Eventbrite"
                ],
                "type": "string"
            },
            "Event_Model_EventPublishStatus": {
                "enum": [
                    "Invalid",
                    "NotPublished",
                    "Published",
                    "Canceled"
                ],
                "type": "string"
            },
            "Event_Model_EventReminderType": {
                "enum": [
                    "Common",
                    "InviteNotification",
                    "EventApproaching"
                ],
                "type": "string"
            },
            "Event_Model_EventStatus": {
                "enum": [
                    "Unknown",
                    "Open",
                    "Closed"
                ],
                "type": "string"
            },
            "Event_Model_GradeLevel": {
                "enum": [
                    "None",
                    "PreK",
                    "Kindergarten",
                    "First",
                    "Second",
                    "Third",
                    "Fourth",
                    "Fifth",
                    "Sixth",
                    "Seventh",
                    "Eighth",
                    "Ninth",
                    "Tenth",
                    "Eleventh",
                    "Twelfth",
                    "Invalid"
                ],
                "type": "string"
            },
            "Event_Model_MergeItemDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/Event_Model_MergeItemType"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_MergeItemType": {
                "enum": [
                    "Common",
                    "Image"
                ],
                "type": "string"
            },
            "Event_Model_MilestoneCategory": {
                "enum": [
                    "Undefined",
                    "Personal",
                    "Discipleship",
                    "Security"
                ],
                "type": "string"
            },
            "Event_Model_MinistryMemberStatus": {
                "enum": [
                    "NotContacted",
                    "FirstContact",
                    "SecondContact",
                    "Pending",
                    "Ineligible",
                    "Active",
                    "Inactive",
                    "InTraining",
                    "Unknown"
                ],
                "type": "string"
            },
            "Event_Model_NotificationChannelType": {
                "enum": [
                    "All",
                    "Email",
                    "Sms",
                    "App",
                    "Push"
                ],
                "type": "string"
            },
            "Event_Model_NotificationLabelType": {
                "enum": [
                    "None",
                    "Favorite"
                ],
                "type": "string"
            },
            "Event_Model_NotificationSourceType": {
                "enum": [
                    "Unknown",
                    "FlowWorkItemAssigned",
                    "FlowWorkItemReassigned",
                    "FlowWorkItemCommented",
                    "FlowWorkItemOverdue",
                    "FlowWorkItemBlocked",
                    "MinistryMemberInterested",
                    "MinistryMemberStatusChanged",
                    "MinistryMemberNoteCreated",
                    "MinistryMember",
                    "DeliveryResult",
                    "ServingOpportunityVolunteer",
                    "ServingOpportunityVolunteerInterested",
                    "DebugEmail",
                    "VerificationEmail",
                    "AddedToMinistryAsLeader",
                    "WorkflowCommunication",
                    "ReminderNotification",
                    "EventAttendee",
                    "WorkflowTaskEscalated",
                    "WorkflowTaskCommented",
                    "WorkflowTaskReassigned",
                    "WorkflowTaskBlocked",
                    "WorkflowTasksPastDueDigest",
                    "WorkflowTasksDueTodayDigest",
                    "WorkflowTasksNewlyCreatedOrAssignedDigest",
                    "MemberEngagementStartOfService",
                    "MemberEngagementDailyVerse",
                    "MemberEngagementMilestoneAchieved",
                    "MemberEngagementCustomPastorMessage",
                    "InviteAndNotifyMinistry",
                    "SystemCommunication",
                    "MinistryMemberSms",
                    "SmsConsentRequest",
                    "EventCheckInVolunteer",
                    "GivingCommunication",
                    "EventContact",
                    "EventCheckInAttendee",
                    "ServingOpportunityVolunteerSms",
                    "ServingOpportunityVolunteerUnscheduled",
                    "MemberEngagementDailyDevotional",
                    "MyFollowUpsManualCommunication"
                ],
                "type": "string"
            },
            "Event_Model_NotificationSourceTypeCategory": {
                "enum": [
                    "Discipleship",
                    "Events",
                    "Ministry",
                    "System",
                    "Workflow",
                    "MemberEngagement",
                    "Giving"
                ],
                "type": "string"
            },
            "Event_Model_NotificationStatusType": {
                "enum": [
                    "Unprocessed",
                    "Pending",
                    "Running",
                    "Succeeded",
                    "Failed",
                    "Skipped"
                ],
                "type": "string"
            },
            "Event_Model_OccurrenceStatus": {
                "enum": [
                    "Active",
                    "Canceled",
                    "Removed"
                ],
                "type": "string"
            },
            "Event_Model_Person": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uniqueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityKnown": {
                        "type": "boolean"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "prefix": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "middleName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "suffix": {
                        "type": "string",
                        "nullable": true
                    },
                    "nickName": {
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "nullable": true
                    },
                    "maritalStatus": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "membershipStatusId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "disengagementReason": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deceasedDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "gradeLevel": {
                        "$ref": "#/components/schemas/Event_Model_GradeLevel"
                    },
                    "allergies": {
                        "type": "string",
                        "nullable": true
                    },
                    "address1": {
                        "type": "string",
                        "nullable": true
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "homePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "cellPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryPhoneType": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "milestones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_Model_PersonMilestone"
                        },
                        "nullable": true
                    },
                    "departmentId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "departmentName": {
                        "type": "string",
                        "nullable": true
                    },
                    "departmentChurchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "departmentChurchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "preferredServiceEventId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isUser": {
                        "type": "boolean"
                    },
                    "profilePictureUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "profilePhotoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdByPerson": {
                        "$ref": "#/components/schemas/Event_Model_PersonSecurityLite"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedByPerson": {
                        "$ref": "#/components/schemas/Event_Model_PersonSecurityLite"
                    },
                    "modifyDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_PersonDocument": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personUniqueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "filename": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileMimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fileTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "deleteDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "mergeableItem": {
                        "$ref": "#/components/schemas/Event_Model_MergeItemDto"
                    },
                    "createdByPerson": {
                        "$ref": "#/components/schemas/Event_Model_PersonSecurityLite"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedByPerson": {
                        "$ref": "#/components/schemas/Event_Model_PersonSecurityLite"
                    },
                    "modifyDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_PersonMilestone": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "milestoneId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "milestoneOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "milestone": {
                        "type": "string",
                        "nullable": true
                    },
                    "milestoneCategory": {
                        "$ref": "#/components/schemas/Event_Model_MilestoneCategory"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "document": {
                        "$ref": "#/components/schemas/Event_Model_PersonDocument"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_Model_PersonDocument"
                        },
                        "nullable": true
                    },
                    "mergeableItem": {
                        "$ref": "#/components/schemas/Event_Model_MergeItemDto"
                    },
                    "createdByPerson": {
                        "$ref": "#/components/schemas/Event_Model_PersonSecurityLite"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedByPerson": {
                        "$ref": "#/components/schemas/Event_Model_PersonSecurityLite"
                    },
                    "modifyDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_PersonSecurityLite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uniqueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "fullName": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatarUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_ReminderData": {
                "type": "object",
                "properties": {
                    "emailData": {
                        "$ref": "#/components/schemas/Event_Model_ReminderEmailData"
                    },
                    "eventData": {
                        "$ref": "#/components/schemas/Event_Model_ReminderEventData"
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_ReminderEmailData": {
                "type": "object",
                "properties": {
                    "emailTemplateId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "emailTemplateName": {
                        "type": "string",
                        "nullable": true
                    },
                    "senderId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "senderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "replyEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true
                    },
                    "htmlBody": {
                        "type": "string",
                        "nullable": true
                    },
                    "bodyTemplateName": {
                        "type": "string",
                        "nullable": true
                    },
                    "attachments": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "ccToSender": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_ReminderEventData": {
                "type": "object",
                "properties": {
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "$ref": "#/components/schemas/Event_Model_EventReminderType"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_ReminderInterval": {
                "enum": [
                    "Unknown",
                    "Minutes",
                    "Hours",
                    "Days",
                    "Weeks"
                ],
                "type": "string"
            },
            "Event_Model_StandardErrorResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_Model_TemplateFormat": {
                "enum": [
                    "Unknown",
                    "PlainText",
                    "Html",
                    "PrinterLabel"
                ],
                "type": "string"
            },
            "Event_Model_TemplateType": {
                "enum": [
                    "Unknown",
                    "ContentSpot",
                    "Layout",
                    "CompleteDocument",
                    "Base"
                ],
                "type": "string"
            },
            "Event_Model_VolunteerCheckInStatus": {
                "enum": [
                    "Invalid",
                    "CheckedIn",
                    "CheckedOut",
                    "Scheduled"
                ],
                "type": "string"
            },
            "Event_MyPersonEventItemViewModel": {
                "type": "object",
                "properties": {
                    "registeredForAllOccurrences": {
                        "type": "boolean"
                    },
                    "privateId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "eventStatus": {
                        "$ref": "#/components/schemas/Event_Model_EventStatus"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventCategoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advertiseOnWeb": {
                        "type": "boolean"
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/Event_SchedulePublicViewModel"
                    },
                    "occurrence": {
                        "$ref": "#/components/schemas/Event_OccurrencePublicViewModel"
                    },
                    "tagIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "hostMinistryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isVirtual": {
                        "type": "boolean"
                    },
                    "eventVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueDetailsViewModel"
                        },
                        "nullable": true
                    },
                    "publishedChurchEntityIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "slug": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "webHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "webHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeader": {
                        "type": "string",
                        "nullable": true
                    },
                    "companionAppHeaderUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnail": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnailUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_MyPersonEventResultsViewModel": {
                "type": "object",
                "properties": {
                    "totalResults": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "myPersonEventItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_MyPersonEventItemViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_NamedEntityViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_NoteViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "entityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "entityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "purpose": {
                        "type": "string",
                        "nullable": true
                    },
                    "subject": {
                        "type": "string",
                        "nullable": true
                    },
                    "noteText": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSensitive": {
                        "type": "boolean"
                    },
                    "isPinned": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "createdByName": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdByEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdByAvatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "modifiedBy": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "modifiedByName": {
                        "type": "string",
                        "nullable": true
                    },
                    "modifiedByEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "modifiedByAvatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "modifyDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "ministryId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "ministry": {
                        "type": "string",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntity": {
                        "type": "string",
                        "nullable": true
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "categoryName": {
                        "type": "string",
                        "nullable": true
                    },
                    "taskName": {
                        "type": "string",
                        "nullable": true
                    },
                    "reminderId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_NotificationRecipientViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "pushNotificationRegistrationId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Event_Model_NotificationChannelType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_NotificationStatusType"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "isViewed": {
                        "type": "boolean"
                    },
                    "retryCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_PersonLiteViewModel"
                    },
                    "mergeVariableReplacements": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_NotificationResultViewModel": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "list": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_NotificationViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_NotificationSenderContactViewModel": {
                "type": "object",
                "properties": {
                    "senderIdentifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "senderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "replyIdentifier": {
                        "type": "string",
                        "nullable": true
                    },
                    "reportPersonId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "ccToSender": {
                        "type": "boolean"
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_PersonLiteViewModel"
                    }
                },
                "additionalProperties": false
            },
            "Event_NotificationViewModel": {
                "required": [
                    "body",
                    "sourceId",
                    "summary"
                ],
                "type": "object",
                "properties": {
                    "attachments": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "sourceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sourceId2": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "sourceId3": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "groupId": {
                        "type": "string",
                        "nullable": true
                    },
                    "sourceType": {
                        "$ref": "#/components/schemas/Event_Model_NotificationSourceType"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "label": {
                        "$ref": "#/components/schemas/Event_Model_NotificationLabelType"
                    },
                    "payload": {
                        "type": "string",
                        "nullable": true
                    },
                    "createDate": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_NotificationRecipientViewModel"
                        },
                        "nullable": true
                    },
                    "senderContact": {
                        "$ref": "#/components/schemas/Event_NotificationSenderContactViewModel"
                    },
                    "allFailed": {
                        "type": "boolean"
                    },
                    "allSkipped": {
                        "type": "boolean"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Event_Model_NotificationSourceTypeCategory"
                    }
                },
                "additionalProperties": false
            },
            "Event_OccurrenceEventViewModel": {
                "required": [
                    "duration",
                    "startTime"
                ],
                "type": "object",
                "properties": {
                    "event": {
                        "$ref": "#/components/schemas/Event_EventViewModel"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleSequenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "pattern": "^(2[0-3]|1[0-9]|0?[0-9]):([0-5][0-9])(:([0-5][0-9]))?$",
                        "type": "string"
                    },
                    "duration": {
                        "pattern": "^(([0-9][0-9]?).)?(2[0-3]|1[0-9]|0?[0-9]):([0-5]?[0-9])(:([0-5]?[0-9]))?$",
                        "type": "string"
                    },
                    "timeZone": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                    },
                    "newDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "newStartTime": {
                        "pattern": "^(2[0-3]|1[0-9]|0?[0-9]):([0-5][0-9])(:([0-5][0-9]))?$",
                        "type": "string",
                        "nullable": true
                    },
                    "newDuration": {
                        "pattern": "^(([0-9][0-9]?).)?(2[0-3]|1[0-9]|0?[0-9]):([0-5]?[0-9])(:([0-5]?[0-9]))?$",
                        "type": "string",
                        "nullable": true
                    },
                    "actualDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "actualStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "actualDuration": {
                        "type": "string",
                        "nullable": true
                    },
                    "isOverloaded": {
                        "type": "boolean"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_OccurrencePublicViewModel": {
                "required": [
                    "duration",
                    "startTime"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleSequenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "timeZone": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                    },
                    "actualDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "actualStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "actualDuration": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "isOverloaded": {
                        "type": "boolean"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_OccurrenceVenueViewModel": {
                "type": "object",
                "properties": {
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "venueIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_OccurrenceViewModel": {
                "required": [
                    "duration",
                    "startTime"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleSequenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "pattern": "^(2[0-3]|1[0-9]|0?[0-9]):([0-5][0-9])(:([0-5][0-9]))?$",
                        "type": "string"
                    },
                    "duration": {
                        "pattern": "^(([0-9][0-9]?).)?(2[0-3]|1[0-9]|0?[0-9]):([0-5]?[0-9])(:([0-5]?[0-9]))?$",
                        "type": "string"
                    },
                    "timeZone": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                    },
                    "newDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "newStartTime": {
                        "pattern": "^(2[0-3]|1[0-9]|0?[0-9]):([0-5][0-9])(:([0-5][0-9]))?$",
                        "type": "string",
                        "nullable": true
                    },
                    "newDuration": {
                        "pattern": "^(([0-9][0-9]?).)?(2[0-3]|1[0-9]|0?[0-9]):([0-5]?[0-9])(:([0-5]?[0-9]))?$",
                        "type": "string",
                        "nullable": true
                    },
                    "actualDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "actualStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "actualDuration": {
                        "type": "string",
                        "nullable": true
                    },
                    "isOverloaded": {
                        "type": "boolean"
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_OccurrenceViewModel_V2": {
                "required": [
                    "date",
                    "duration",
                    "startTime"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleSequenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "timeZone": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_OccurrenceStatus"
                    },
                    "newDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "newStartTime": {
                        "type": "string",
                        "format": "date-span",
                        "nullable": true
                    },
                    "newDuration": {
                        "type": "string",
                        "format": "date-span",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_OccurrencesViewModel": {
                "type": "object",
                "properties": {
                    "next": {
                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                    },
                    "current": {
                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Event_OccurrenceViewModel"
                    }
                },
                "additionalProperties": false
            },
            "Event_OccurrencesViewModel_V2": {
                "type": "object",
                "properties": {
                    "next": {
                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                    },
                    "current": {
                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Event_OccurrenceViewModel_V2"
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonAddressViewModel": {
                "required": [
                    "address1",
                    "city",
                    "countryAlpha3"
                ],
                "type": "object",
                "properties": {
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "regionCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryAlpha2": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryAlpha3": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPrimary": {
                        "type": "boolean"
                    },
                    "isValidated": {
                        "type": "boolean"
                    },
                    "isBadContact": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonDocumentViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "filename": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileMimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "fileSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "fileTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonEmailViewModel": {
                "required": [
                    "email"
                ],
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPrimary": {
                        "type": "boolean"
                    },
                    "isValidated": {
                        "type": "boolean"
                    },
                    "isBadContact": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonLiteViewModel": {
                "required": [
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "pattern": "(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*)@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:|\\\\)+)\\])",
                        "type": "string"
                    },
                    "emailVerifyDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isEmailVerified": {
                        "type": "boolean"
                    },
                    "sourceClientId": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonMilestoneDateLiteViewModel": {
                "type": "object",
                "properties": {
                    "date": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "location": {
                        "type": "string",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonMilestoneDateViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "date": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "location": {
                        "type": "string",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "document": {
                        "$ref": "#/components/schemas/Event_PersonDocumentViewModel"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonDocumentViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonMilestoneViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "category": {
                        "$ref": "#/components/schemas/Event_Model_MilestoneCategory"
                    },
                    "uiOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "dates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonMilestoneDateViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonOccupationViewModel": {
                "required": [
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "isPrimary": {
                        "type": "boolean"
                    },
                    "isStaff": {
                        "type": "boolean"
                    },
                    "departmentId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "departmentName": {
                        "type": "string",
                        "nullable": true
                    },
                    "departmentChurchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "departmentChurchEntityName": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonPhoneViewModel": {
                "required": [
                    "phoneNumber"
                ],
                "type": "object",
                "properties": {
                    "phoneTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "phoneType": {
                        "type": "string",
                        "nullable": true
                    },
                    "phoneNumber": {
                        "maxLength": 20,
                        "minLength": 0,
                        "type": "string",
                        "format": "tel"
                    },
                    "isPublic": {
                        "type": "boolean"
                    },
                    "displayPhoneNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "extension": {
                        "maxLength": 7,
                        "minLength": 0,
                        "pattern": "\\d*",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "isPrimary": {
                        "type": "boolean"
                    },
                    "isValidated": {
                        "type": "boolean"
                    },
                    "isBadContact": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonPublicContactViewModel": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PersonViewModel": {
                "required": [
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "address1": {
                        "type": "string",
                        "nullable": true
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonAddressViewModel"
                        },
                        "nullable": true
                    },
                    "age": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "allergies": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthDate": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "cellPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "churchEntityKnown": {
                        "type": "boolean"
                    },
                    "churchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "deceasedDate": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "departmentChurchEntityId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "departmentChurchEntityName": {
                        "type": "string",
                        "nullable": true
                    },
                    "departmentId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "departmentName": {
                        "type": "string",
                        "nullable": true
                    },
                    "disengagementReason": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "emails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonEmailViewModel"
                        },
                        "nullable": true
                    },
                    "firstContact": {
                        "$ref": "#/components/schemas/Event_PersonMilestoneDateLiteViewModel"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "fullName": {
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "nullable": true
                    },
                    "gradeLevel": {
                        "$ref": "#/components/schemas/Event_Model_GradeLevel"
                    },
                    "homePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "isAdult": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isChild": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "isStudent": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "maritalStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "maritalStatusId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "membershipStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "membershipStatusId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "middleName": {
                        "type": "string",
                        "nullable": true
                    },
                    "milestones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonMilestoneViewModel"
                        },
                        "nullable": true
                    },
                    "modifiedDate": {
                        "type": "integer",
                        "format": "int64",
                        "nullable": true
                    },
                    "nickName": {
                        "type": "string",
                        "nullable": true
                    },
                    "occupations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonOccupationViewModel"
                        },
                        "nullable": true
                    },
                    "phones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_PersonPhoneViewModel"
                        },
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "preferredServiceEventId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "prefix": {
                        "type": "string",
                        "nullable": true
                    },
                    "primaryPhoneType": {
                        "type": "string",
                        "nullable": true
                    },
                    "profilePhotoUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "profilePictureUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "suffix": {
                        "type": "string",
                        "nullable": true
                    },
                    "workPhone": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PublicEventPublishViewModel": {
                "type": "object",
                "properties": {
                    "destination": {
                        "$ref": "#/components/schemas/Event_Model_EventPublishDestinationType"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_PublicOccurrenceViewModel_Core_V2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "timeZone": {
                        "type": "string",
                        "nullable": true
                    },
                    "localStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "localEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "utcStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "utcEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Event_PublicOccurrenceViewModel_V2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "timeZone": {
                        "type": "string",
                        "nullable": true
                    },
                    "localStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "localEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "utcStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "utcEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Event_PublicRegistrationOccurrenceViewModel_V2": {
                "type": "object",
                "properties": {
                    "registrationCapacity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "registrationCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "timeZone": {
                        "type": "string",
                        "nullable": true
                    },
                    "localStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "localEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "utcStartDateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "utcEndDateTime": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false
            },
            "Event_ReminderViewModel": {
                "type": "object",
                "properties": {
                    "schedule": {
                        "$ref": "#/components/schemas/Event_ScheduleViewModel_Core_V2"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "interval": {
                        "$ref": "#/components/schemas/Event_Model_ReminderInterval"
                    },
                    "before": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "processed": {
                        "type": "boolean"
                    },
                    "reminderData": {
                        "$ref": "#/components/schemas/Event_Model_ReminderData"
                    }
                },
                "additionalProperties": false
            },
            "Event_RoomCategoryViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isUsed": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_SchedulePublicViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "occurrencesCount": {
                        "maximum": 10000,
                        "minimum": 2,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "custom": {
                        "type": "boolean"
                    },
                    "sequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_ScheduleSequencePublicViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ScheduleSequencePublicViewModel": {
                "required": [
                    "duration",
                    "startTime",
                    "timeZone"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "occurrenceStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "isRecurring": {
                        "type": "boolean"
                    },
                    "recurrenceFrequencyId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "recurrenceFrequency": {
                        "type": "string",
                        "nullable": true
                    },
                    "dayOfWeek": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startTime": {
                        "pattern": "^(2[0-3]|1[0-9]|0?[0-9]):([0-5][0-9])(:([0-5][0-9]))?$",
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "pattern": "^(([0-9][0-9]?).)?(2[0-3]|1[0-9]|0?[0-9]):([0-5]?[0-9])(:([0-5]?[0-9]))?$",
                        "type": "string",
                        "format": "date-span"
                    },
                    "monthEnabled": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        },
                        "nullable": true
                    },
                    "interval": {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "canBeChanged": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ScheduleSequenceViewModel": {
                "required": [
                    "duration",
                    "startTime",
                    "timeZone"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "occurrenceStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "isRecurring": {
                        "type": "boolean"
                    },
                    "recurrenceFrequencyId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "recurrenceFrequency": {
                        "type": "string",
                        "nullable": true
                    },
                    "dayOfWeek": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startTime": {
                        "pattern": "^(2[0-3]|1[0-9]|0?[0-9]):([0-5][0-9])(:([0-5][0-9]))?$",
                        "type": "string"
                    },
                    "duration": {
                        "pattern": "^(([0-9][0-9]?).)?(2[0-3]|1[0-9]|0?[0-9]):([0-5]?[0-9])(:([0-5]?[0-9]))?$",
                        "type": "string"
                    },
                    "monthEnabled": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        },
                        "nullable": true
                    },
                    "interval": {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "canBeChanged": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ScheduleSequenceViewModel_Core_V2": {
                "required": [
                    "duration",
                    "startTime",
                    "timeZone"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "occurrenceStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "isRecurring": {
                        "type": "boolean"
                    },
                    "recurrenceFrequencyId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "recurrenceFrequency": {
                        "type": "string",
                        "nullable": true
                    },
                    "dayOfWeek": {
                        "$ref": "#/components/schemas/Event_App_IsoDayOfWeek"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "monthEnabled": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        },
                        "nullable": true
                    },
                    "interval": {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "canBeChanged": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ScheduleSequenceViewModel_V2": {
                "required": [
                    "duration",
                    "startTime",
                    "timeZone"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "occurrenceStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "timeZone": {
                        "type": "string"
                    },
                    "isRecurring": {
                        "type": "boolean"
                    },
                    "recurrenceFrequencyId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "recurrenceFrequency": {
                        "type": "string",
                        "nullable": true
                    },
                    "dayOfWeek": {
                        "$ref": "#/components/schemas/Event_App_IsoDayOfWeek"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "duration": {
                        "type": "string",
                        "format": "date-span"
                    },
                    "monthEnabled": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        },
                        "nullable": true
                    },
                    "interval": {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "canBeChanged": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ScheduleViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "occurrencesCount": {
                        "maximum": 10000,
                        "minimum": 2,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "custom": {
                        "type": "boolean"
                    },
                    "startDayOfWeek": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "sequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_ScheduleSequenceViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ScheduleViewModel_Core_V2": {
                "type": "object",
                "properties": {
                    "occurrencesCount": {
                        "maximum": 10000,
                        "minimum": 2,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "custom": {
                        "type": "boolean"
                    },
                    "sequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_ScheduleSequenceViewModel_Core_V2"
                        },
                        "nullable": true
                    },
                    "startDayOfWeek": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_ScheduleViewModel_V2": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "churchEntityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scheduleEntityType": {
                        "type": "string",
                        "nullable": true
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "occurrencesCount": {
                        "maximum": 10000,
                        "minimum": 2,
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "custom": {
                        "type": "boolean"
                    },
                    "startDayOfWeek": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "sequences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_ScheduleSequenceViewModel_V2"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_SmsViewModel": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "recipientIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "nullable": true
                    },
                    "message": {
                        "maxLength": 153,
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "Event_SubVenueViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "venueId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueTypeId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueType": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_TemplateViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "$ref": "#/components/schemas/Event_Model_TemplateType"
                    },
                    "format": {
                        "$ref": "#/components/schemas/Event_Model_TemplateFormat"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "isSystem": {
                        "type": "boolean"
                    },
                    "isRazor": {
                        "type": "boolean"
                    },
                    "designData": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_VenueAddressViewModel": {
                "required": [
                    "address1",
                    "city"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "address1": {
                        "type": "string"
                    },
                    "address2": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "nullable": true
                    },
                    "postalCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_VenuesOccurrenceViewModel": {
                "type": "object",
                "properties": {
                    "venues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventVenueOccurrenceViewModel"
                        },
                        "nullable": true
                    },
                    "subVenues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Event_EventSubVenueOccurrenceViewModel"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Event_VolunteerCheckInViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "eventId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "servingOpportunityId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "occurrenceId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "personId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "subVenueId": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "status": {
                        "$ref": "#/components/schemas/Event_Model_VolunteerCheckInStatus"
                    },
                    "checkInTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "checkOutTime": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Event_PersonViewModel"
                    },
                    "checkOutAllowed": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "coreMilestones": {
                        "$ref": "#/components/schemas/Event_CoreMilestonesViewModel"
                    }
                },
                "additionalProperties": false
            },
            "Event_WorshipServiceCategoryViewModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "maxLength": 50,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "maxLength": 2048,
                        "minLength": 0,
                        "type": "string",
                        "nullable": true
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "isActive": {
                        "type": "boolean"
                    },
                    "isUsed": {
                        "type": "boolean",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            }
        }
    }
}
